(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[24],{1468:function(o,e,t){"use strict";t.r(e);var n=t(0),r=t.n(n),n=t(499),a=t(501),i=t(54),s=t(1469),s=t.n(s),c=Object(i.a)(s.a),l=[{name:"01-base",title:Object(i.a)("Arbitrary \n Grid system is dynamic generated and can be any number."),component:t(1470).default,rawText:t(1471)},{name:"02-offset",title:Object(i.a)("Offset \n The offset property set the offset in the same way as the width."),component:t(1472).default,rawText:t(1473)},{name:"03-nested",title:Object(i.a)("Nested \n Nested grids"),component:t(1474).default,rawText:t(1475)},{name:"04-gutter",title:Object(i.a)("Gutter \n Set grid spacing through the gutter property."),component:t(1476).default,rawText:t(1477)}];e.default=Object(n.a)(function(e){return r.a.createElement(a.b,Object.assign({},e,{codes:void 0,source:c,examples:l}))})},1469:function(e,t){e.exports="# Grid\r\n\r\n<example />\r\n\r\n# API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| className | string | none | Extend className |\r\n| gutter | number | none | Spacing between grids |\r\n| offset | number | 0 | Left offset percentage, 0 <= offset < 1 |\r\n| style | object | - | Container element style |\r\n| width | number | 1 | Percentage of width, 0 < number <= 1 |"},1470:function(r,e,t){"use strict";t.r(e),t.d(e,"default",function(){return n});var a=t(3),i=t(4),s=t(5),c=t(6),e=t(0),l=t.n(e),o=t(303),d=t(308),n=function(e){Object(s.a)(r,e);var n=Object(c.a)(r);function r(e){var t;return Object(a.a)(this,r),(t=n.call(this,e)).handleCountChange=function(e){t.setState({count:e})},t.state={count:5},t}return Object(i.a)(r,[{key:"render",value:function(){var n=this.state.count;return l.a.createElement("div",null,l.a.createElement(o.a,{formatValue:!1,scale:[1,2,3,5,8,13,21,34,55],step:0,value:n,onChange:this.handleCountChange}),l.a.createElement("div",{style:{height:20}}),Array.from({length:n}).map(function(e,t){return l.a.createElement("div",{key:t,style:{background:"#f2f2f2",marginBottom:4,lineHeight:"30px"}},l.a.createElement(d.a,{width:(t+1)/n,style:{color:"#fff",paddingLeft:8,background:"#3399ff"}},t+1,"/",n))}))}}]),r}(e.Component)},1471:function(e,t){e.exports="/**\r\n * - Arbitrary\r\n *    -- Grid system is dynamic generated and can be any number.\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Grid, Slider } from 'megacosm'\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { count: 5 }\r\n  }\r\n\r\n  handleCountChange = count => {\r\n    this.setState({ count })\r\n  }\r\n\r\n  render() {\r\n    const { count } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Slider\r\n          formatValue={false}\r\n          scale={[1, 2, 3, 5, 8, 13, 21, 34, 55]}\r\n          step={0}\r\n          value={count}\r\n          onChange={this.handleCountChange}\r\n        />\r\n\r\n        <div style={{ height: 20 }} />\r\n\r\n        {Array.from({ length: count }).map((n, i) => (\r\n          <div key={i} style={{ background: '#f2f2f2', marginBottom: 4, lineHeight: '30px' }}>\r\n            <Grid width={(i + 1) / count} style={{ color: '#fff', paddingLeft: 8, background: '#3399ff' }}>\r\n              {i + 1}/{count}\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},1472:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(308),s={color:"#fff",lineHeight:"60px",textAlign:"center",background:"#3399ff"};t.default=function(){return a.a.createElement("div",{style:{background:"#f2f2f2"}},a.a.createElement(i.a,{width:1/3,offset:1/3,style:s},"With 1/3, Offset 1/3"))}},1473:function(e,t){e.exports="/**\r\n * - Offset\r\n *    -- The offset property set the offset in the same way as the width.\r\n */\r\nimport React from 'react'\r\nimport { Grid } from 'megacosm'\r\n\r\nconst style = {\r\n  color: '#fff',\r\n  lineHeight: '60px',\r\n  textAlign: 'center',\r\n  background: '#3399ff',\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <div style={{ background: '#f2f2f2' }}>\r\n      <Grid width={1 / 3} offset={1 / 3} style={style}>\r\n        With 1/3, Offset 1/3\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n"},1474:function(e,t,n){"use strict";n.r(t);var r=n(13),a=n(0),i=n.n(a),s=n(308),c={color:"#fff",lineHeight:"30px",textAlign:"center",background:"#3399ff"};t.default=function(){return i.a.createElement(s.a,{style:{textAlign:"center"}},i.a.createElement(s.a,{width:.5,style:c},"1/2"),i.a.createElement(s.a,{width:.5,style:{lineHeight:"30px"}},i.a.createElement("div",null,"1/2"),i.a.createElement("div",null,i.a.createElement(s.a,{style:c,width:1/3},"1/3"),i.a.createElement(s.a,{style:Object(r.a)(Object(r.a)({},c),{},{background:"#f5f5f5",color:"#333"}),width:1/3},"1/3"),i.a.createElement(s.a,{style:c,width:1/3},"1/3"))))}},1475:function(e,t){e.exports="/**\r\n * - Nested\r\n *    -- Nested grids\r\n */\r\nimport React from 'react'\r\nimport { Grid } from 'megacosm'\r\n\r\nconst style = {\r\n  color: '#fff',\r\n  lineHeight: '30px',\r\n  textAlign: 'center',\r\n  background: '#3399ff',\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Grid style={{ textAlign: 'center' }}>\r\n      <Grid width={1 / 2} style={style}>\r\n        1/2\r\n      </Grid>\r\n\r\n      <Grid width={1 / 2} style={{ lineHeight: '30px' }}>\r\n        <div>1/2</div>\r\n        <div>\r\n          <Grid style={style} width={1 / 3}>\r\n            1/3\r\n          </Grid>\r\n          <Grid style={{ ...style, background: '#f5f5f5', color: '#333' }} width={1 / 3}>\r\n            1/3\r\n          </Grid>\r\n          <Grid style={style} width={1 / 3}>\r\n            1/3\r\n          </Grid>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n"},1476:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(308),s={color:"#fff",lineHeight:"30px",textAlign:"center",background:"#3399ff"};t.default=function(){return a.a.createElement("div",{style:{background:"#f2f2f2"}},a.a.createElement(i.a,{gutter:8},Array.from({length:8}).map(function(e,t){return t+1}).map(function(e){return a.a.createElement(i.a,{key:e,width:1/8},a.a.createElement("div",{style:s},"1/8"))})))}},1477:function(e,t){e.exports="/**\r\n * - Gutter\r\n *    -- Set grid spacing through the gutter property.\r\n */\r\nimport React from 'react'\r\nimport { Grid } from 'megacosm'\r\n\r\nconst style = {\r\n  color: '#fff',\r\n  lineHeight: '30px',\r\n  textAlign: 'center',\r\n  background: '#3399ff',\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <div style={{ background: '#f2f2f2' }}>\r\n      <Grid gutter={8}>\r\n        {Array.from({ length: 8 })\r\n          .map((_, i) => i + 1)\r\n          .map(i => (\r\n            <Grid key={i} width={1 / 8}>\r\n              <div style={style}>1/8</div>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n"},303:function(n,r,e){"use strict";var h=e(55),f=e(14),g=e(26),a=e(3),i=e(4),s=e(1),c=e(5),l=e(6),t=e(0),o=e.n(t),p=e(16),m=e.n(p),d=e(150),v=e(29),p=e(19),b=e(20),y=Object(b.curry)(function(r){var e=function(e){Object(c.a)(n,e);var t=Object(l.a)(n);function n(e){return Object(a.a)(this,n),(e=t.call(this,e)).handleDragStart=e.handleDragStart.bind(Object(s.a)(e)),e.handleDrag=e.handleDrag.bind(Object(s.a)(e)),e.handleDragEnd=e.handleDragEnd.bind(Object(s.a)(e)),e}return Object(i.a)(n,[{key:"componentDidMount",value:function(){var e=this.props.client;e&&(this.clientX=e.x,this.clientY=e.y,this.dragging=!0,this.addEvents(),this.props.onDragStart(!0))}},{key:"componentWillUnmount",value:function(){this.removeEvents()}},{key:"addEvents",value:function(){document.addEventListener("mousemove",this.handleDrag),document.addEventListener("mouseup",this.handleDragEnd),document.addEventListener("mouseleave",this.handleDragEnd)}},{key:"removeEvents",value:function(){document.removeEventListener("mousemove",this.handleDrag),document.removeEventListener("mouseup",this.handleDragEnd),document.removeEventListener("mouseleave",this.handleDragEnd)}},{key:"handleDragStart",value:function(e){0===e.button&&(this.clientX=e.clientX,this.clientY=e.clientY,this.dragging=!0,this.addEvents(),this.props.onDragStart(!0))}},{key:"handleDrag",value:function(e){var t,n;this.dragging&&(0===e.clientX&&0===e.clientY||(t=e.clientX-this.clientX,n=e.clientY-this.clientY,0==t&&0==n||(this.clientX=e.clientX,this.clientY=e.clientY,this.props.onDrag(t,n,e.clientX,e.clientY))))}},{key:"handleDragEnd",value:function(){this.dragging&&(this.dragging=!1,this.removeEvents(),this.props.onDragEnd(!1))}},{key:"render",value:function(){return o.a.createElement(r,Object.assign({},this.props,{onDragStart:this.handleDragStart}))}}]),n}(t.PureComponent);return e.defaultProps={client:void 0,onDragStart:function(){},onDrag:function(){},onDragEnd:function(){}},e})(function(e){Object(c.a)(n,e);var t=Object(l.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"render",value:function(){var e=this.props.disabled?void 0:this.props.onDragStart;return o.a.createElement("div",{onMouseDown:e,className:Object(d.a)("indicator")})}}]),n}(t.PureComponent)),O=e(75);function u(n,e){var t=e.length-1,r=0;if(e.forEach(function(e,t){e<n&&(r=t)}),t<=r)return 1;var a=e[r],e=e[r+1];return(r+(n-a)/(e-a))/t}function E(e,t,n){var n=2<arguments.length&&void 0!==n?n:1,r=t.length-1;if(0===n)return t[Math.round(e*r)];if(1<=e)return t[r];var a=Math.floor(e*r),i=t[a],t=(t[a+1]-i)/n,e=(e-a/r)*r;return Object(O.toPrecision)(i+Math.round(e*t)*n)}var b=function(e){Object(c.a)(r,e);var n=Object(l.a)(r);function r(e){var t;return Object(a.a)(this,r),(t=n.call(this,e)).state={dragging:!1,length:u(e.value,e.scale)},t.bindElement=t.bindElement.bind(Object(s.a)(t)),t.handleDrag=t.handleDrag.bind(Object(s.a)(t)),t.handleDragEnd=t.handleDragEnd.bind(Object(s.a)(t)),t}return Object(i.a)(r,[{key:"componentDidUpdate",value:function(e){var t=this.props,n=t.value,t=t.scale,r=this.state.dragging,a=t.length;e.value===n&&(r||e.scale[a-1]===t[a-1])||this.setState({length:u(n,t)})}},{key:"bindElement",value:function(e){e&&(this.parentElement=e.parentElement)}},{key:"length2value",value:function(e){var t=this.props;return E(e,t.scale,t.step)}},{key:"handleDrag",value:function(e,t){var n=this.props,r=n.scale,a=n.onDrag,i=n.value,s=n.vertical,n=n.onIncrease,t=s?t/this.parentElement.clientHeight:e/this.parentElement.clientWidth,e=this.state.length,c=this.props.min?u(this.props.min,r):0,r=this.props.max?u(this.props.max,r):1,e=e+(s?-t:t),s=1<e;r<(e=e<c?c:e)&&(e=r),s&&n&&n(),this.setState({length:e,dragging:!0}),!a||(t=this.length2value(e))!==i&&a(t)}},{key:"handleDragEnd",value:function(){var e=this.state.length,t=this.props.scale,e=this.length2value(e);this.setState({length:u(e,t),dragging:!1}),this.props.onChange(this.props.index,e)}},{key:"renderResult",value:function(){var e=this.props,t=e.autoHide,e=e.formatValue;if(!e)return null;var n=this.state.dragging,t=Object(d.a)("result",(!t||n)&&"show"),n=e(this.length2value(this.state.length));return o.a.createElement("div",{className:t},n)}},{key:"render",value:function(){var e=this.props,t=e.index,n=e.disabled,e=e.vertical,r=this.state.length,r=(1===t&&(r=1-r),Object(v.a)({},e?"height":"width","".concat(100*r,"%"))),e=Object(d.a)("bar",e&&(1===t?"top":"bottom"),!e&&1===t&&"right");return o.a.createElement("div",{ref:this.bindElement,style:r,className:e},this.renderResult(),o.a.createElement("div",{className:Object(d.a)("bar-bg")}),o.a.createElement(y,{disabled:n,onDrag:this.handleDrag,onDragEnd:this.handleDragEnd}))}}]),r}(p.b),j=(b.defaultProps={formatValue:function(e){return e}},b),k=e(90),D=["range","height","style","vertical"],p=function(e){Object(c.a)(n,e);var t=Object(l.a)(n);function n(e){return Object(a.a)(this,n),(e=t.call(this,e)).state={},e.bindElement=e.bindElement.bind(Object(s.a)(e)),e.handleClick=e.handleClick.bind(Object(s.a)(e)),e.handleChange=e.handleChange.bind(Object(s.a)(e)),e.handleFirstDrag=e.handleDrag.bind(Object(s.a)(e),0),e.handleSecondDrag=e.handleDrag.bind(Object(s.a)(e),1),e}return Object(i.a)(n,[{key:"getValue",value:function(){var e=this.props,t=e.range,n=e.value,e=e.scale[0];if(!t)return n||e;var r=n;return r=(r=t&&!Array.isArray(n)?[e,e]:r)[0]>r[1]?[r[1],r[0]]:r}},{key:"bindElement",value:function(e){this.innerElement=e}},{key:"handleClick",value:function(e){var t,n,r,a,i;0<=e.target.className.indexOf(Object(d.a)("indicator"))||this.props.disabled||(t=(r=this.props).scale,n=r.step,i=r.vertical,r=r.range,a=this.innerElement.getBoundingClientRect(),i=E(i?1-(e.clientY-a.top)/a.height:(e.clientX-a.left)/a.width,t,n),r?(i<(e=Object(g.a)(this.getValue()))[0]?e[0]=i:e[1]=i,this.props.onChange(e)):this.props.onChange(i))}},{key:"handleChange",value:function(e,t){var n;this.props.range?((n=Object(g.a)(this.getValue()))[e]=t,this.props.onChange(n)):this.props.onChange(t)}},{key:"handleDrag",value:function(e,t){this.props.range||this.props.onDrag(t)}},{key:"renderScale",value:function(){var e=this.props,t=e.autoHide,n=e.formatScale,e=e.scale;return n?o.a.createElement("div",{className:Object(d.a)("scale",!t&&"show")},e.map(function(e,t){return o.a.createElement("div",{key:e},o.a.createElement("span",null,n(e,t)))})):null}},{key:"render",value:function(){var e=this.props,t=e.range,n=e.height,r=e.style,a=e.vertical,e=Object(f.a)(e,D),i=m()(Object(d.a)("_",a&&"vertical",this.props.disabled&&"disabled"),this.props.className),s=this.getValue(),c=(Array.isArray(s)||(s=[0,s]),r);return a&&(c=Object.assign({height:n},r)),o.a.createElement("div",Object.assign({style:c,className:i},Object(k.a)(e)),o.a.createElement("div",{className:Object(d.a)("background")}),o.a.createElement("div",{ref:this.bindElement,onClick:this.handleClick,className:Object(d.a)("inner")},t&&o.a.createElement(j,Object.assign({},e,{index:0,max:s[1],onChange:this.handleChange,value:s[0],vertical:a})),o.a.createElement(j,Object.assign({},e,{index:1,min:s[0],onChange:this.handleChange,value:s[1],vertical:a}))),this.renderScale())}}]),n}(t.PureComponent),b=(p.defaultProps={height:200,scale:[0,100],step:1,vertical:!1,formatScale:function(e){return e}},p),e=Object(h.a)(b);e.displayName="MegacosmSlider",r.a=e},308:function(c,e,t){"use strict";t.d(e,"a",function(){return n});var d=t(13),u=t(14),r=t(3),a=t(4),i=t(5),s=t(6),h=t(0),f=t.n(h),e=t(16),g=t.n(e),p=t(239),m=["width","offset","responsive","stretch","children","gutter"],n=function(e){Object(i.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(a.a)(n,[{key:"render",value:function(){var e=this.props,t=e.width,t=void 0===t?1:t,n=e.offset,r=e.responsive,a=e.stretch,i=e.children,s=e.gutter,e=Object(u.a)(e,m),c=0,l=0,o=(h.Children.toArray(i).forEach(function(e){e.type&&e.type.isGrid&&(e.props.width?l+=e.props.width:c+=1)}),0<c?(1-l)/c:0),t=g()(this.props.className,Object(p.a)({width:t,offset:n,responsive:r})),n=Object.assign({},this.props.style);return s&&0<s&&(n.width="auto",n.display="block",n.marginLeft="".concat(0-s/2,"px"),n.marginRight="".concat(0-s/2,"px")),f.a.createElement("div",Object.assign({},e,{style:n,className:t}),h.Children.toArray(i).map(function(e){var t;return e.type&&e.type.isGrid?(t={style:Object.assign({},e.props.style)},e.props.width||(t.width=o),a&&(t.style=Object(d.a)(Object(d.a)({},t.style),{},{minHeight:"100%",height:"100%"})),s&&0<s&&(t.style=Object(d.a)(Object(d.a)({},t.style),{},{paddingLeft:s/2,paddingRight:s/2})),Object(h.cloneElement)(e,t)):e}))}}]),n}(h.PureComponent);n.isGrid=!0,n.displayName="MegacosmGrid"}}]);