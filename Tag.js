(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[46],{1406:function(c,e,n){"use strict";n.r(e);var t=n(0),a=n.n(t),t=n(499),r=n(501),o=n(54),s=n(1407),s=n.n(s),l=Object(o.a)(s.a),i=[{name:"1-base",title:Object(o.a)("Base \n Basic usage"),component:n(1408).default,rawText:n(1409)},{name:"2-type",title:Object(o.a)("type \n There are four built-in types (styles), [default,success, info, warning, danger], the default value is default."),component:n(1410).default,rawText:n(1411)},{name:"3-bgcolor",title:Object(o.a)("background color \n You can set the style you want with backgroundColor, and style."),component:n(1412).default,rawText:n(1413)},{name:"4-close",title:Object(o.a)("onClose \n When the onClose property is set, the close button is displayed. \n When the onClose property is true, only hide the component. \n When the onClose is a function, call this function after hiding it."),component:n(1414).default,rawText:n(1415)},{name:"5-disabled",title:Object(o.a)("disabled \n disabled the tag"),component:n(1416).default,rawText:n(1417)},{name:"6-dynamic",title:Object(o.a)("Dynamic usage \n create tags by use array, add and remove"),component:n(1418).default,rawText:n(1419)},{name:"7-editable",title:Object(o.a)("editable \n editable when onCompleted is not empty"),component:n(1420).default,rawText:n(1421)}];e.default=Object(t.a)(function(e){return a.a.createElement(r.b,Object.assign({},e,{codes:void 0,source:l,examples:i}))})},1407:function(e,n){e.exports="# Tag\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| -------- | ---- | ------- | ----------- |\r\n| children | ReactNode  | - | Content, text or react component |\r\n| className | string | - | Extend className |\r\n| backgroundColor | string | - | background color,can set the tag's background color by it |\r\n| onClose | () => void \\| boolean | - | When onClose is empty, no close is displayed. If you need to close and do not need to handle callbacks, set it true. |\r\n| onClick | (e: MouseEvent) => void | - | the click callback | \r\n| style | object | - | Container element style |\r\n| disabled | boolean | false | is disabled | \r\n| type | 'success' \\| 'info' \\| 'warning' \\| 'danger' \\| 'error' | *default* | types |\r\n| onCompleted | (value) => void | - | This event is triggered when Tag editing is completed (children must be string) |\r\n"},1408:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(304);n.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,null,"Tag 1"),r.a.createElement(o.a,null,"Tag 2"),r.a.createElement(o.a,{onClose:function(){return console.log("I am close")},onClick:function(){return console.log("I am click")}},"Tag 3"))}},1409:function(e,n){e.exports="/**\r\n * - Base\r\n *    -- Basic usage\r\n */\r\nimport React from 'react'\r\nimport { Tag } from 'megacosm'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Tag>Tag 1</Tag>\r\n      <Tag>Tag 2</Tag>\r\n      <Tag onClose={() => console.log('I am close')} onClick={() => console.log('I am click')}>\r\n        Tag 3\r\n      </Tag>\r\n    </div>\r\n  )\r\n}\r\n"},1410:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(304);n.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,null,"Default"),r.a.createElement(o.a,{type:"success"},"Success"),r.a.createElement(o.a,{type:"info"},"Info"),r.a.createElement(o.a,{type:"warning"},"Warning"),r.a.createElement(o.a,{type:"danger"},"Danger"))}},1411:function(e,n){e.exports='/**\r\n * - type\r\n *    -- There are four built-in types (styles), [default,success, info, warning, danger], the default value is default.\r\n */\r\nimport React from \'react\'\r\nimport { Tag } from \'megacosm\'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Tag>Default</Tag>\r\n      <Tag type="success">Success</Tag>\r\n      <Tag type="info">Info</Tag>\r\n      <Tag type="warning">Warning</Tag>\r\n      <Tag type="danger">Danger</Tag>\r\n    </div>\r\n  )\r\n}\r\n'},1412:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(304);n.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{backgroundColor:"#eeeeee"},"#eeeeee"),r.a.createElement(o.a,{backgroundColor:"#613400"},"#613400"),r.a.createElement(o.a,{style:{color:"#eb2f96",background:"#fff0f6",borderColor:"#ffadd2"}},"#f50"),r.a.createElement(o.a,{style:{color:"#52c41a",background:"#f6ffed",borderColor:"#b7eb8f"}},"#87d068"))}},1413:function(e,n){e.exports="/**\r\n * - background color\r\n *    -- You can set the style you want with backgroundColor, and style.\r\n */\r\nimport React from 'react'\r\nimport { Tag } from 'megacosm'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Tag backgroundColor=\"#eeeeee\">#eeeeee</Tag>\r\n      <Tag backgroundColor=\"#613400\">#613400</Tag>\r\n      <Tag\r\n        style={{\r\n          color: '#eb2f96',\r\n          background: '#fff0f6',\r\n          borderColor: '#ffadd2',\r\n        }}\r\n      >\r\n        #f50\r\n      </Tag>\r\n      <Tag\r\n        style={{\r\n          color: '#52c41a',\r\n          background: '#f6ffed',\r\n          borderColor: '#b7eb8f',\r\n        }}\r\n      >\r\n        #87d068\r\n      </Tag>\r\n    </div>\r\n  )\r\n}\r\n"},1414:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(304);n.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{onClose:!0},"onClose=true"),r.a.createElement(o.a,{onClose:function(){return console.log("close")}},"onClose=function"),r.a.createElement(o.a,{onClose:function(){return new Promise(function(e){setTimeout(function(){console.log("promise close"),e(!0)},3e3)})}},"onClose=promise"))}},1415:function(e,n){e.exports="/**\r\n * - onClose\r\n *    -- When the onClose property is set, the close button is displayed.\r\n *    -- When the onClose property is true, only hide the component.\r\n *    -- When the onClose is a function, call this function after hiding it.\r\n */\r\nimport React from 'react'\r\nimport { Tag } from 'megacosm'\r\n\r\nexport default () => (\r\n  <div>\r\n    <Tag onClose>onClose=true</Tag>\r\n\r\n    <Tag onClose={() => console.log('close')}>onClose=function</Tag>\r\n\r\n    <Tag\r\n      onClose={() =>\r\n        new Promise(resolve => {\r\n          setTimeout(() => {\r\n            console.log('promise close')\r\n            resolve(true)\r\n          }, 3000)\r\n        })\r\n      }\r\n    >\r\n      onClose=promise\r\n    </Tag>\r\n  </div>\r\n)\r\n"},1416:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(304);n.default=function(){return r.a.createElement("div",null,r.a.createElement(o.a,{disabled:!0},"Tag 1"),r.a.createElement(o.a,{disabled:!0,type:"info"},"Tag 2"),r.a.createElement(o.a,{disabled:!0,onClose:!0},"Tag 3"))}},1417:function(e,n){e.exports="/**\r\n * - disabled\r\n *    -- disabled the tag\r\n */\r\nimport React from 'react'\r\nimport { Tag } from 'megacosm'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Tag disabled>Tag 1</Tag>\r\n      <Tag disabled type=\"info\">\r\n        Tag 2\r\n      </Tag>\r\n      <Tag disabled onClose>\r\n        Tag 3\r\n      </Tag>\r\n    </div>\r\n  )\r\n}\r\n"},1418:function(o,e,n){"use strict";n.r(e),n.d(e,"default",function(){return r});var s=n(26),l=n(3),t=n(4),a=n(5),i=n(6),e=n(0),c=n.n(e),u=n(304),r=function(e){Object(a.a)(o,e);var r=Object(i.a)(o);function o(){var a;Object(l.a)(this,o);for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return(a=r.call.apply(r,[this].concat(n))).state={tags:["Tag 1","Tag 2","Tag 3"],inputVisible:!1},a.remove=function(n){var e=a.state.tags.filter(function(e){return e!==n});a.setState({tags:e})},a.showInput=function(){a.setState({inputVisible:!0})},a.handleInputBlur=function(e){var n=a.state.tags,t=n;e&&-1===n.indexOf(e)&&(t=[].concat(Object(s.a)(n),[e])),console.log(t),a.setState({tags:t,inputVisible:!1})},a}return Object(t.a)(o,[{key:"render",value:function(){var n=this,e=this.state,t=e.tags,e=e.inputVisible;return c.a.createElement("div",null,t.map(function(e){return c.a.createElement(u.a,{key:e,onClose:function(){return n.remove(e)}},e)}),e?c.a.createElement(u.a.Input,{onBlur:this.handleInputBlur}):c.a.createElement(u.a,{onClick:this.showInput,style:{background:"#fff",borderStyle:"dashed"}},"+ New Tag"))}}]),o}(e.Component)},1419:function(e,n){e.exports="/**\r\n * - Dynamic usage\r\n *    -- create tags by use array, add and remove\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { Tag } from 'megacosm'\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    tags: ['Tag 1', 'Tag 2', 'Tag 3'],\r\n    inputVisible: false,\r\n  }\r\n\r\n  remove = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag)\r\n    this.setState({ tags })\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true })\r\n  }\r\n\r\n  handleInputBlur = value => {\r\n    const { tags } = this.state\r\n    let newTags = tags\r\n    if (value && tags.indexOf(value) === -1) {\r\n      newTags = [...tags, value]\r\n    }\r\n    console.log(newTags)\r\n    this.setState({\r\n      tags: newTags,\r\n      inputVisible: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { tags, inputVisible } = this.state\r\n    return (\r\n      <div>\r\n        {tags.map(a => (\r\n          <Tag key={a} onClose={() => this.remove(a)}>\r\n            {a}\r\n          </Tag>\r\n        ))}\r\n        {inputVisible ? (\r\n          <Tag.Input onBlur={this.handleInputBlur} />\r\n        ) : (\r\n          <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n            + New Tag\r\n          </Tag>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},1420:function(e,n,t){"use strict";t.r(n);var a=t(28),r=t(0),o=t.n(r),s=t(304);n.default=function(){var e=Object(r.useState)("abc"),e=Object(a.a)(e,2),n=e[0],t=e[1];return o.a.createElement("div",null,o.a.createElement(s.a,{onCompleted:function(e){t(e)},onClose:function(){console.log("close")}},n))}},1421:function(e,n){e.exports="/**\r\n * - editable\r\n *    -- editable when onCompleted is not empty\r\n */\r\nimport React, { useState } from 'react'\r\nimport { Tag } from 'megacosm'\r\n\r\nexport default function() {\r\n  const [value, setValue] = useState('abc')\r\n  return (\r\n    <div>\r\n      <Tag\r\n        onCompleted={val => {\r\n          setValue(val)\r\n        }}\r\n        onClose={() => {\r\n          console.log('close')\r\n        }}\r\n      >\r\n        {value}\r\n      </Tag>\r\n    </div>\r\n  )\r\n}\r\n"},304:function(l,i,e){"use strict";var d=e(13),a=e(3),r=e(4),o=e(1),c=e(5),u=e(6),n=e(0),g=e.n(n),n=e(19),p=e(27),m=e(22),b=e(81),f=e(46),t=function(e){Object(c.a)(t,e);var n=Object(u.a)(t);function t(e){return Object(a.a)(this,t),(e=n.call(this,e)).bindRef=e.bindRef.bind(Object(o.a)(e)),e.handleChange=e.handleChange.bind(Object(o.a)(e)),e.handleBlur=e.handleBlur.bind(Object(o.a)(e)),e.handleKeyUp=e.handleKeyUp.bind(Object(o.a)(e)),e}return Object(r.a)(t,[{key:"componentDidMount",value:function(){Object(p.a)(Object(m.a)(t.prototype),"componentDidMount",this).call(this),this.element&&this.element.focus()}},{key:"bindRef",value:function(e){this.element=e}},{key:"handleChange",value:function(e){var e=e.target.value,n=this.props.onChange;n&&n(e)}},{key:"handleKeyUp",value:function(e){var n=this.props,t=n.onBlur,a=n.onKeyUp,n=n.onEnterPress;13===e.keyCode&&(n?n(e.target.value,e):t&&t(e.target.value,e)),a&&a(e)}},{key:"handleBlur",value:function(e){var n=this.props.onBlur;n&&n(e.target.value,e)}},{key:"render",value:function(){var e=this.props,n=e.value,e=e.onFocus;return g.a.createElement("input",{ref:this.bindRef,type:"text",value:n,onFocus:e,onChange:this.handleChange,onKeyUp:this.handleKeyUp,onBlur:this.handleBlur})}}]),t}(n.b),h=Object(b.a)({className:Object(f.a)("input")})(t),b=e(31),v=e(51),T=e(50),y=e(25),s=e(10),C=e(11),k=e(15),O=e(90),t=function(e){Object(c.a)(t,e);var n=Object(u.a)(t);function t(e){return Object(a.a)(this,t),(e=n.call(this,e)).state={dismiss:0,inputVisible:0,value:null},e.dismiss=e.dismiss.bind(Object(o.a)(e)),e.handleClick=e.handleClick.bind(Object(o.a)(e)),e.handleClose=e.handleClose.bind(Object(o.a)(e)),e.renderClose=e.renderClose.bind(Object(o.a)(e)),e.closeTag=e.closeTag.bind(Object(o.a)(e)),e.toggleInputVisible=e.toggleInputVisible.bind(Object(o.a)(e)),e.inputBlur=e.inputBlur.bind(Object(o.a)(e)),e.inputChange=e.inputChange.bind(Object(o.a)(e)),e}return Object(r.a)(t,[{key:"componentDidMount",value:function(){var e=this.props,n=e.children;e.onCompleted&&Object(s.isString)(n)&&!Object(s.isEmpty)(n)&&this.setState({value:n})}},{key:"closeTag",value:function(){this.setState({dismiss:0<arguments.length&&void 0!==arguments[0]?arguments[0]:2})}},{key:"dismiss",value:function(e){var n,t=this,a=this.props.onClose;if(!0!==a){if("function"==typeof a&&(n=a(e)),Object(s.isPromise)(n))return this.setState({dismiss:1}),void n.then(function(){t.closeTag()}).catch(function(){t.closeTag(0)});e.defaultPrevented||this.closeTag()}else this.closeTag()}},{key:"inputBlur",value:function(e){var n=this.props.onCompleted;Object(s.isFunc)(n)&&n(e),this.setState({inputVisible:0})}},{key:"inputChange",value:function(e){this.setState({value:e})}},{key:"toggleInputVisible",value:function(){var e=this.state,n=e.inputVisible,e=e.value;this.props.onCompleted&&!Object(s.isEmpty)(e)&&this.setState({inputVisible:0===n?1:0})}},{key:"handleClick",value:function(e){var n=this.props,t=n.onClick;n.disabled||(this.toggleInputVisible(),"function"==typeof t&&t(e))}},{key:"handleClose",value:function(e){var n=this.props.disabled;0<this.state.dismiss||n||this.dismiss(e)}},{key:"renderClose",value:function(e){if(!this.props.onClose)return null;var n=Object(f.a)("close-icon"),t=Object(f.a)("close-loading");return 0===e?g.a.createElement("div",{className:n,onClick:this.handleClose},T.a.Close):g.a.createElement("div",{className:t},g.a.createElement(v.a,{name:"ring",size:10}))}},{key:"render",value:function(){var e=this.state,n=e.dismiss,t=e.inputVisible,e=e.value;if(2===n)return null;var a=this.props,r=a.children,o=a.className,s=a.type,l=a.backgroundColor,i=a.onClose,c=a.disabled,a=a.onCompleted,u=Object(k.b)();if(a&&1===t)return g.a.createElement(h,{value:e,onBlur:this.inputBlur,onChange:this.inputChange});a=Object(y.wrapSpan)(r),t=this.props.style,e=Object(f.a)("_",c&&"disabled",s,u&&"rtl"),r=Object(f.a)("inline"),c=i?{}:{onClick:this.handleClick},s=t||{};return o&&(e+=" ".concat(o)),l&&(s=Object(d.a)({color:Object(C.isDark)(l)?"#fff":"#000",backgroundColor:l,borderColor:"transparent"},t)),g.a.createElement("div",Object.assign({className:e,style:s},c,Object(O.a)(this.props)),i?g.a.createElement("div",{onClick:this.handleClick,className:r},a):a,this.renderClose(n))}}]),t}(n.b),e=(t.defaultProps=Object(d.a)(Object(d.a)({},b.a),{},{type:"default"}),t);e.Input=h,e.displayName="MegacosmTag",i.a=e}}]);