(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[22],{1415:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(486),s=n(487),c=n(45),r=n(1416),r=n.n(r),l=Object(c.a)(r.a),o=[{name:"01-base",title:Object(c.a)("Arbitrary \n Grid system is dynamic generated and can be any number."),component:n(1417).default,rawText:n(1418)},{name:"02-offset",title:Object(c.a)("Offset \n The offset property set the offset in the same way as the width."),component:n(1419).default,rawText:n(1420)},{name:"03-nested",title:Object(c.a)("Nested \n Nested grids"),component:n(1421).default,rawText:n(1422)},{name:"04-gutter",title:Object(c.a)("Gutter \n Set grid spacing through the gutter property."),component:n(1423).default,rawText:n(1424)}];t.default=Object(i.a)(function(e){return a.a.createElement(s.b,Object.assign({},e,{codes:void 0,source:l,examples:o}))})},1416:function(e,t){e.exports="# Grid\r\n\r\n<example />\r\n\r\n# API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| className | string | none | Extend className |\r\n| gutter | number | none | Spacing between grids |\r\n| offset | number | 0 | Left offset percentage, 0 <= offset < 1 |\r\n| style | object | - | Container element style |\r\n| width | number | 1 | Percentage of width, 0 < number <= 1 |"},1417:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return r});var a=n(4),i=n(5),s=n(6),c=n(7),t=n(0),l=n.n(t),o=n(291),d=n(295),r=function(e){Object(s.a)(r,e);var n=Object(c.a)(r);function r(e){var t;return Object(a.a)(this,r),(t=n.call(this,e)).handleCountChange=function(e){t.setState({count:e})},t.state={count:5},t}return Object(i.a)(r,[{key:"render",value:function(){var n=this.state.count;return l.a.createElement("div",null,l.a.createElement(o.a,{formatValue:!1,scale:[1,2,3,5,8,13,21,34,55],step:0,value:n,onChange:this.handleCountChange}),l.a.createElement("div",{style:{height:20}}),Array.from({length:n}).map(function(e,t){return l.a.createElement("div",{key:t,style:{background:"#f2f2f2",marginBottom:4,lineHeight:"30px"}},l.a.createElement(d.a,{width:(t+1)/n,style:{color:"#fff",paddingLeft:8,background:"#3399ff"}},t+1,"/",n))}))}}]),r}(t.Component)},1418:function(e,t){e.exports="/**\r\n * - Arbitrary\r\n *    -- Grid system is dynamic generated and can be any number.\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Grid, Slider } from 'megacosm'\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { count: 5 }\r\n  }\r\n\r\n  handleCountChange = count => {\r\n    this.setState({ count })\r\n  }\r\n\r\n  render() {\r\n    const { count } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Slider\r\n          formatValue={false}\r\n          scale={[1, 2, 3, 5, 8, 13, 21, 34, 55]}\r\n          step={0}\r\n          value={count}\r\n          onChange={this.handleCountChange}\r\n        />\r\n\r\n        <div style={{ height: 20 }} />\r\n\r\n        {Array.from({ length: count }).map((n, i) => (\r\n          <div key={i} style={{ background: '#f2f2f2', marginBottom: 4, lineHeight: '30px' }}>\r\n            <Grid width={(i + 1) / count} style={{ color: '#fff', paddingLeft: 8, background: '#3399ff' }}>\r\n              {i + 1}/{count}\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},1419:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(295),s={color:"#fff",lineHeight:"60px",textAlign:"center",background:"#3399ff"};t.default=function(){return a.a.createElement("div",{style:{background:"#f2f2f2"}},a.a.createElement(i.a,{width:1/3,offset:1/3,style:s},"With 1/3, Offset 1/3"))}},1420:function(e,t){e.exports="/**\r\n * - Offset\r\n *    -- The offset property set the offset in the same way as the width.\r\n */\r\nimport React from 'react'\r\nimport { Grid } from 'megacosm'\r\n\r\nconst style = {\r\n  color: '#fff',\r\n  lineHeight: '60px',\r\n  textAlign: 'center',\r\n  background: '#3399ff',\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <div style={{ background: '#f2f2f2' }}>\r\n      <Grid width={1 / 3} offset={1 / 3} style={style}>\r\n        With 1/3, Offset 1/3\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n"},1421:function(e,t,n){"use strict";n.r(t);var r=n(17),a=n(0),i=n.n(a),s=n(295),c={color:"#fff",lineHeight:"30px",textAlign:"center",background:"#3399ff"};t.default=function(){return i.a.createElement(s.a,{style:{textAlign:"center"}},i.a.createElement(s.a,{width:.5,style:c},"1/2"),i.a.createElement(s.a,{width:.5,style:{lineHeight:"30px"}},i.a.createElement("div",null,"1/2"),i.a.createElement("div",null,i.a.createElement(s.a,{style:c,width:1/3},"1/3"),i.a.createElement(s.a,{style:Object(r.a)(Object(r.a)({},c),{},{background:"#f5f5f5",color:"#333"}),width:1/3},"1/3"),i.a.createElement(s.a,{style:c,width:1/3},"1/3"))))}},1422:function(e,t){e.exports="/**\r\n * - Nested\r\n *    -- Nested grids\r\n */\r\nimport React from 'react'\r\nimport { Grid } from 'megacosm'\r\n\r\nconst style = {\r\n  color: '#fff',\r\n  lineHeight: '30px',\r\n  textAlign: 'center',\r\n  background: '#3399ff',\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Grid style={{ textAlign: 'center' }}>\r\n      <Grid width={1 / 2} style={style}>\r\n        1/2\r\n      </Grid>\r\n\r\n      <Grid width={1 / 2} style={{ lineHeight: '30px' }}>\r\n        <div>1/2</div>\r\n        <div>\r\n          <Grid style={style} width={1 / 3}>\r\n            1/3\r\n          </Grid>\r\n          <Grid style={{ ...style, background: '#f5f5f5', color: '#333' }} width={1 / 3}>\r\n            1/3\r\n          </Grid>\r\n          <Grid style={style} width={1 / 3}>\r\n            1/3\r\n          </Grid>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n"},1423:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(295),s={color:"#fff",lineHeight:"30px",textAlign:"center",background:"#3399ff"};t.default=function(){return a.a.createElement("div",{style:{background:"#f2f2f2"}},a.a.createElement(i.a,{gutter:8},Array.from({length:8}).map(function(e,t){return t+1}).map(function(e){return a.a.createElement(i.a,{key:e,width:1/8},a.a.createElement("div",{style:s},"1/8"))})))}},1424:function(e,t){e.exports="/**\r\n * - Gutter\r\n *    -- Set grid spacing through the gutter property.\r\n */\r\nimport React from 'react'\r\nimport { Grid } from 'megacosm'\r\n\r\nconst style = {\r\n  color: '#fff',\r\n  lineHeight: '30px',\r\n  textAlign: 'center',\r\n  background: '#3399ff',\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <div style={{ background: '#f2f2f2' }}>\r\n      <Grid gutter={8}>\r\n        {Array.from({ length: 8 })\r\n          .map((_, i) => i + 1)\r\n          .map(i => (\r\n            <Grid key={i} width={1 / 8}>\r\n              <div style={style}>1/8</div>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n"},291:function(e,t,n){"use strict";var r=n(46),l=n(14),s=n(24),a=n(4),i=n(5),c=n(2),o=n(6),d=n(7),u=n(0),h=n.n(u),f=n(15),g=n.n(f),p=n(1),m=n(29),v=n(19),f=n(20),b=Object(f.curry)(function(r){var e=function(e){Object(o.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(a.a)(this,n),(e=t.call(this,e)).handleDragStart=e.handleDragStart.bind(Object(c.a)(e)),e.handleDrag=e.handleDrag.bind(Object(c.a)(e)),e.handleDragEnd=e.handleDragEnd.bind(Object(c.a)(e)),e}return Object(i.a)(n,[{key:"componentDidMount",value:function(){var e=this.props.client;e&&(this.clientX=e.x,this.clientY=e.y,this.dragging=!0,this.addEvents(),this.props.onDragStart(!0))}},{key:"componentWillUnmount",value:function(){this.removeEvents()}},{key:"addEvents",value:function(){document.addEventListener("mousemove",this.handleDrag),document.addEventListener("mouseup",this.handleDragEnd),document.addEventListener("mouseleave",this.handleDragEnd)}},{key:"removeEvents",value:function(){document.removeEventListener("mousemove",this.handleDrag),document.removeEventListener("mouseup",this.handleDragEnd),document.removeEventListener("mouseleave",this.handleDragEnd)}},{key:"handleDragStart",value:function(e){0===e.button&&(this.clientX=e.clientX,this.clientY=e.clientY,this.dragging=!0,this.addEvents(),this.props.onDragStart(!0))}},{key:"handleDrag",value:function(e){var t,n;this.dragging&&(0===e.clientX&&0===e.clientY||(t=e.clientX-this.clientX,n=e.clientY-this.clientY,0==t&&0==n||(this.clientX=e.clientX,this.clientY=e.clientY,this.props.onDrag(t,n,e.clientX,e.clientY))))}},{key:"handleDragEnd",value:function(){this.dragging&&(this.dragging=!1,this.removeEvents(),this.props.onDragEnd(!1))}},{key:"render",value:function(){return h.a.createElement(r,Object.assign({},this.props,{onDragStart:this.handleDragStart}))}}]),n}(u.PureComponent);return e.defaultProps={client:void 0,onDragStart:function(){},onDrag:function(){},onDragEnd:function(){}},e})(function(e){Object(o.a)(n,e);var t=Object(d.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"render",value:function(){var e=this.props.disabled?void 0:this.props.onDragStart;return h.a.createElement("div",{onMouseDown:e,className:Object(p.F)("indicator")})}}]),n}(u.PureComponent)),y=n(75);function O(n,e){var t=e.length-1,r=0;if(e.forEach(function(e,t){e<n&&(r=t)}),t<=r)return 1;var a=e[r],e=e[r+1];return(r+(n-a)/(e-a))/t}function E(e,t,n){var r=2<arguments.length&&void 0!==n?n:1,a=t.length-1;if(0===r)return t[Math.round(e*a)];if(1<=e)return t[a];var i=Math.floor(e*a),n=t[i],t=(t[i+1]-n)/r,a=(e-i/a)*a;return Object(y.toPrecision)(n+Math.round(a*t)*r)}v=function(e){Object(o.a)(r,e);var n=Object(d.a)(r);function r(e){var t;return Object(a.a)(this,r),(t=n.call(this,e)).state={dragging:!1,length:O(e.value,e.scale)},t.bindElement=t.bindElement.bind(Object(c.a)(t)),t.handleDrag=t.handleDrag.bind(Object(c.a)(t)),t.handleDragEnd=t.handleDragEnd.bind(Object(c.a)(t)),t}return Object(i.a)(r,[{key:"componentDidUpdate",value:function(e){var t=this.props,n=t.value,r=t.scale,a=this.state.dragging,t=r.length;e.value===n&&(a||e.scale[t-1]===r[t-1])||this.setState({length:O(n,r)})}},{key:"bindElement",value:function(e){e&&(this.parentElement=e.parentElement)}},{key:"length2value",value:function(e){var t=this.props;return E(e,t.scale,t.step)}},{key:"handleDrag",value:function(e,t){var n=this.props,r=n.scale,a=n.onDrag,i=n.value,s=n.vertical,c=n.onIncrease,n=s?t/this.parentElement.clientHeight:e/this.parentElement.clientWidth,t=this.state.length,e=this.props.min?O(this.props.min,r):0,r=this.props.max?O(this.props.max,r):1,s=t+(s?-n:n),n=1<s;r<(s=s<e?e:s)&&(s=r),n&&c&&c(),this.setState({length:s,dragging:!0}),!a||(s=this.length2value(s))!==i&&a(s)}},{key:"handleDragEnd",value:function(){var e=this.state.length,t=this.props.scale,e=this.length2value(e);this.setState({length:O(e,t),dragging:!1}),this.props.onChange(this.props.index,e)}},{key:"renderResult",value:function(){var e=this.props,t=e.autoHide,n=e.formatValue;if(!n)return null;e=this.state.dragging,e=Object(p.F)("result",(!t||e)&&"show"),n=n(this.length2value(this.state.length));return h.a.createElement("div",{className:e},n)}},{key:"render",value:function(){var e=this.props,t=e.index,n=e.disabled,r=e.vertical,e=this.state.length;1===t&&(e=1-e);e=Object(m.a)({},r?"height":"width","".concat(100*e,"%")),t=Object(p.F)("bar",r&&(1===t?"top":"bottom"),!r&&1===t&&"right");return h.a.createElement("div",{ref:this.bindElement,style:e,className:t},this.renderResult(),h.a.createElement("div",{className:Object(p.F)("bar-bg")}),h.a.createElement(b,{disabled:n,onDrag:this.handleDrag,onDragEnd:this.handleDragEnd}))}}]),r}(v.b);v.defaultProps={formatValue:function(e){return e}};var j=v,k=n(73),D=["range","height","style","vertical"],n=function(e){Object(o.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(a.a)(this,n),(e=t.call(this,e)).state={},e.bindElement=e.bindElement.bind(Object(c.a)(e)),e.handleClick=e.handleClick.bind(Object(c.a)(e)),e.handleChange=e.handleChange.bind(Object(c.a)(e)),e.handleFirstDrag=e.handleDrag.bind(Object(c.a)(e),0),e.handleSecondDrag=e.handleDrag.bind(Object(c.a)(e),1),e}return Object(i.a)(n,[{key:"getValue",value:function(){var e=this.props,t=e.range,n=e.value,r=e.scale[0];if(!t)return n||r;e=n;return e=(e=t&&!Array.isArray(n)?[r,r]:e)[0]>e[1]?[e[1],e[0]]:e}},{key:"bindElement",value:function(e){this.innerElement=e}},{key:"handleClick",value:function(e){var t,n,r,a,i;0<=e.target.className.indexOf(Object(p.F)("indicator"))||this.props.disabled||(t=(r=this.props).scale,a=r.step,n=r.vertical,i=r.range,r=this.innerElement.getBoundingClientRect(),a=E(n?1-(e.clientY-r.top)/r.height:(e.clientX-r.left)/r.width,t,a),i?(a<(i=Object(s.a)(this.getValue()))[0]?i[0]=a:i[1]=a,this.props.onChange(i)):this.props.onChange(a))}},{key:"handleChange",value:function(e,t){var n;this.props.range?((n=Object(s.a)(this.getValue()))[e]=t,this.props.onChange(n)):this.props.onChange(t)}},{key:"handleDrag",value:function(e,t){this.props.range||this.props.onDrag(t)}},{key:"renderScale",value:function(){var e=this.props,t=e.autoHide,n=e.formatScale,e=e.scale;return n?h.a.createElement("div",{className:Object(p.F)("scale",!t&&"show")},e.map(function(e,t){return h.a.createElement("div",{key:e},h.a.createElement("span",null,n(e,t)))})):null}},{key:"render",value:function(){var e=this.props,t=e.range,n=e.height,r=e.style,a=e.vertical,i=Object(l.a)(e,D),s=g()(Object(p.F)("_",a&&"vertical",this.props.disabled&&"disabled"),this.props.className),c=this.getValue();Array.isArray(c)||(c=[0,c]);e=r;return a&&(e=Object.assign({height:n},r)),h.a.createElement("div",Object.assign({style:e,className:s},Object(k.a)(i)),h.a.createElement("div",{className:Object(p.F)("background")}),h.a.createElement("div",{ref:this.bindElement,onClick:this.handleClick,className:Object(p.F)("inner")},t&&h.a.createElement(j,Object.assign({},i,{index:0,max:c[1],onChange:this.handleChange,value:c[0],vertical:a})),h.a.createElement(j,Object.assign({},i,{index:1,min:c[0],onChange:this.handleChange,value:c[1],vertical:a}))),this.renderScale())}}]),n}(u.PureComponent);n.defaultProps={height:200,scale:[0,100],step:1,vertical:!1,formatScale:function(e){return e}};n=Object(r.a)(n);n.displayName="MegacosmSlider";t.a=n},295:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var d=n(17),u=n(14),r=n(4),a=n(5),i=n(6),s=n(7),h=n(0),f=n.n(h),t=n(15),g=n.n(t),p=n(150),m=["width","offset","responsive","stretch","children","gutter"],c=function(e){Object(i.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(a.a)(n,[{key:"render",value:function(){var e=this.props,t=e.width,n=void 0===t?1:t,r=e.offset,a=e.responsive,i=e.stretch,t=e.children,s=e.gutter,e=Object(u.a)(e,m),c=0,l=0;h.Children.toArray(t).forEach(function(e){e.type&&e.type.isGrid&&(e.props.width?l+=e.props.width:c+=1)});var o=0<c?(1-l)/c:0,r=g()(this.props.className,Object(p.a)({width:n,offset:r,responsive:a})),a=Object.assign({},this.props.style);return s&&0<s&&(a.width="auto",a.display="block",a.marginLeft="".concat(0-s/2,"px"),a.marginRight="".concat(0-s/2,"px")),f.a.createElement("div",Object.assign({},e,{style:a,className:r}),h.Children.toArray(t).map(function(e){if(e.type&&e.type.isGrid){var t={style:Object.assign({},e.props.style)};return e.props.width||(t.width=o),i&&(t.style=Object(d.a)(Object(d.a)({},t.style),{},{minHeight:"100%",height:"100%"})),s&&0<s&&(t.style=Object(d.a)(Object(d.a)({},t.style),{},{paddingLeft:s/2,paddingRight:s/2})),Object(h.cloneElement)(e,t)}return e}))}}]),n}(h.PureComponent);c.isGrid=!0,c.displayName="MegacosmGrid"}}]);