(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[16],{1409:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(488),o=n(489),l=n(45),r=n(1410),r=n.n(r),c=Object(l.a)(r.a),m=[{name:"1-base",title:Object(l.a)(""),component:n(1411).default,rawText:n(1412)},{name:"2-base",title:Object(l.a)(""),component:n(1413).default,rawText:n(1414)},{name:"3-base",title:Object(l.a)(""),component:n(1415).default,rawText:n(1416)}];t.default=Object(i.a)(function(e){return a.a.createElement(o.b,Object.assign({},e,{codes:void 0,source:c,examples:m}))})},1410:function(e,t){e.exports="# Divider\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| children | ReactNode | - | Content, text or react component|\r\n| className | string | - | Extend className |\r\n| style | object | - | Container element style |\r\n| mode | 'horizontal' \\| 'vertical' | *horizontal* |  mode of divider |\r\n| orientation | 'center' \\| 'left' \\| 'right' | *center* |  The position of title inside divider |"},1411:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(294),o=n(494);t.default=function(){return a.a.createElement("div",null,a.a.createElement("p",null,Object(o.a)(1)),a.a.createElement(i.a,null),a.a.createElement("p",null,Object(o.a)(3)),a.a.createElement(i.a,null),a.a.createElement("p",null,Object(o.a)(5)))}},1412:function(e,t){e.exports="/**\r\n * - Base\r\n *  --Divider is horizontal by default. You can add text within Divider.\r\n */\r\nimport React from 'react'\r\nimport { Divider } from 'megacosm'\r\nimport lorem from 'doc/utils/faker/lorem'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <p>{lorem(1)}</p>\r\n      <Divider />\r\n      <p>{lorem(3)}</p>\r\n      <Divider />\r\n      <p>{lorem(5)}</p>\r\n    </div>\r\n  )\r\n}\r\n"},1413:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(294),o=n(494);t.default=function(){return a.a.createElement("div",null,a.a.createElement("p",null,Object(o.a)(1)),a.a.createElement(i.a,null,"Text"),a.a.createElement("p",null,Object(o.a)(3)),a.a.createElement(i.a,{orientation:"left"},"Left Text"),a.a.createElement("p",null,Object(o.a)(4)),a.a.createElement(i.a,{orientation:"right"},"Right Text"),a.a.createElement("p",null,Object(o.a)(5)))}},1414:function(e,t){e.exports="/**\r\n * - Divider with title\r\n *  --Divider with inner title, set orientation=\"left/right\" to align it.\r\n */\r\nimport React from 'react'\r\nimport { Divider } from 'megacosm'\r\nimport lorem from 'doc/utils/faker/lorem'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <p>{lorem(1)}</p>\r\n      <Divider>Text</Divider>\r\n      <p>{lorem(3)}</p>\r\n      <Divider orientation=\"left\">Left Text</Divider>\r\n      <p>{lorem(4)}</p>\r\n      <Divider orientation=\"right\">Right Text</Divider>\r\n      <p>{lorem(5)}</p>\r\n    </div>\r\n  )\r\n}\r\n"},1415:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(294);t.default=function(){return a.a.createElement("div",null,a.a.createElement("span",null,"Left"),a.a.createElement(i.a,{mode:"vertical"},"H"),a.a.createElement("span",null,"Center"),a.a.createElement(i.a,{mode:"vertical"}),a.a.createElement("span",null,"Right"))}},1416:function(e,t){e.exports='/**\r\n * - Vertical\r\n *  --  Use type="vertical" make it vertical.\r\n */\r\nimport React from \'react\'\r\nimport { Divider } from \'megacosm\'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <span>Left</span>\r\n      <Divider mode="vertical">H</Divider>\r\n      <span>Center</span>\r\n      <Divider mode="vertical" />\r\n      <span>Right</span>\r\n    </div>\r\n  )\r\n}\r\n'},294:function(e,t,n){"use strict";var i=n(14),r=n(4),a=n(5),o=n(6),l=n(7),c=n(0),m=n.n(c),s=n(15),u=n.n(s),d=n(1),p=["className","children","mode","orientation"],c=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(a.a)(n,[{key:"showText",value:function(){var e=this.props,t=e.children,e=e.mode;return t&&"horizontal"===e}},{key:"render",value:function(){var e=this.props,t=e.className,n=e.children,r=e.mode,a=e.orientation,e=Object(i.a)(e,p),t=u()(Object(d.j)("_",r,n&&"with-text",a&&"with-text-".concat(a)),t);return m.a.createElement("div",Object.assign({},e,{className:t}),this.showText()&&m.a.createElement("span",{className:Object(d.j)("inner-text")},n))}}]),n}(c.PureComponent);c.defaultProps={mode:"horizontal"},t.a=c}}]);