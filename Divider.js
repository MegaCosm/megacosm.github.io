(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[16],{1453:function(m,e,t){"use strict";t.r(e);var n=t(0),r=t.n(n),n=t(499),i=t(501),a=t(54),o=t(1454),o=t.n(o),l=Object(a.a)(o.a),c=[{name:"1-base",title:Object(a.a)("Base \n Divider is horizontal by default. You can add text within Divider."),component:t(1455).default,rawText:t(1457)},{name:"2-base",title:Object(a.a)('Divider with title \n Divider with inner title, set orientation="left/right" to align it.'),component:t(1458).default,rawText:t(1459)},{name:"3-base",title:Object(a.a)('Vertical \n Use type="vertical" make it vertical.'),component:t(1460).default,rawText:t(1461)}];e.default=Object(n.a)(function(e){return r.a.createElement(i.b,Object.assign({},e,{codes:void 0,source:l,examples:c}))})},1454:function(e,t){e.exports="# Divider\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| children | ReactNode | - | Content, text or react component|\r\n| className | string | - | Extend className |\r\n| style | object | - | Container element style |\r\n| mode | 'horizontal' \\| 'vertical' | *horizontal* |  mode of divider |\r\n| orientation | 'center' \\| 'left' \\| 'right' | *center* |  The position of title inside divider |"},1455:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(322),o=n(503);t.default=function(){return i.a.createElement("div",null,i.a.createElement("p",null,Object(o.a)(1)),i.a.createElement(a.a,null),i.a.createElement("p",null,Object(o.a)(3)),i.a.createElement(a.a,null),i.a.createElement("p",null,Object(o.a)(5)))}},1456:function(e,t){},1457:function(e,t){e.exports="/**\r\n * - Base\r\n *  --Divider is horizontal by default. You can add text within Divider.\r\n */\r\nimport React from 'react'\r\nimport { Divider } from 'megacosm'\r\nimport lorem from 'doc/utils/faker/lorem'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <p>{lorem(1)}</p>\r\n      <Divider />\r\n      <p>{lorem(3)}</p>\r\n      <Divider />\r\n      <p>{lorem(5)}</p>\r\n    </div>\r\n  )\r\n}\r\n"},1458:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(322),o=n(503);t.default=function(){return i.a.createElement("div",null,i.a.createElement("p",null,Object(o.a)(1)),i.a.createElement(a.a,null,"Text"),i.a.createElement("p",null,Object(o.a)(3)),i.a.createElement(a.a,{orientation:"left"},"Left Text"),i.a.createElement("p",null,Object(o.a)(4)),i.a.createElement(a.a,{orientation:"right"},"Right Text"),i.a.createElement("p",null,Object(o.a)(5)))}},1459:function(e,t){e.exports="/**\r\n * - Divider with title\r\n *  --Divider with inner title, set orientation=\"left/right\" to align it.\r\n */\r\nimport React from 'react'\r\nimport { Divider } from 'megacosm'\r\nimport lorem from 'doc/utils/faker/lorem'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <p>{lorem(1)}</p>\r\n      <Divider>Text</Divider>\r\n      <p>{lorem(3)}</p>\r\n      <Divider orientation=\"left\">Left Text</Divider>\r\n      <p>{lorem(4)}</p>\r\n      <Divider orientation=\"right\">Right Text</Divider>\r\n      <p>{lorem(5)}</p>\r\n    </div>\r\n  )\r\n}\r\n"},1460:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(322);t.default=function(){return i.a.createElement("div",null,i.a.createElement("span",null,"Left"),i.a.createElement(a.a,{mode:"vertical"},"H"),i.a.createElement("span",null,"Center"),i.a.createElement(a.a,{mode:"vertical"}),i.a.createElement("span",null,"Right"))}},1461:function(e,t){e.exports='/**\r\n * - Vertical\r\n *  --  Use type="vertical" make it vertical.\r\n */\r\nimport React from \'react\'\r\nimport { Divider } from \'megacosm\'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <span>Left</span>\r\n      <Divider mode="vertical">H</Divider>\r\n      <span>Center</span>\r\n      <Divider mode="vertical" />\r\n      <span>Right</span>\r\n    </div>\r\n  )\r\n}\r\n'},322:function(d,e,t){"use strict";var a=t(14),r=t(3),i=t(4),o=t(5),s=t(6),n=t(0),l=t.n(n),c=t(16),u=t.n(c),c=t(1456),c=t.n(c),t=t(12),m=Object(t.a)(c.a,"divider"),p=["className","children","mode","orientation"],t=function(e){Object(o.a)(n,e);var t=Object(s.a)(n);function n(){return Object(r.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"showText",value:function(){var e=this.props,t=e.children,e=e.mode;return t&&"horizontal"===e}},{key:"render",value:function(){var e=this.props,t=e.className,n=e.children,r=e.mode,i=e.orientation,e=Object(a.a)(e,p),r=u()(m("_",r,n&&"with-text",i&&"with-text-".concat(i)),t);return l.a.createElement("div",Object.assign({},e,{className:r}),this.showText()&&l.a.createElement("span",{className:m("inner-text")},n))}}]),n}(n.PureComponent);t.defaultProps={mode:"horizontal"},e.a=t}}]);