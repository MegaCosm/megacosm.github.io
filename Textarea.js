(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[47],{1028:function(l,e,t){"use strict";t.r(e);var n=t(0),r=t.n(n),n=t(499),a=t(501),o=t(54),i=t(1029),i=t.n(i),s=Object(o.a)(i.a),u=[{name:"1-base",title:Object(o.a)("Base \n Multi-line text input box"),component:t(1030).default,rawText:t(1031)},{name:"2-autosize",title:Object(o.a)("Autosize \n When the autosize property is true, component will change height to fit the content. Set maxHeight to limit maximum height."),component:t(1032).default,rawText:t(1033)},{name:"3-info",title:Object(o.a)("Info \n Set info to number, set the maximum length, and the user's focus shows the length of text that the user has entered. \n If the length is exceeded, the error is reported. It is not hidden."),component:t(1034).default,rawText:t(1035)},{name:"4-custom",title:Object(o.a)("Custom Info \n can customize the info by setting info as a function \n if the functio return an Error , the info doesn't hide"),component:t(1036).default,rawText:t(1037)}];e.default=Object(n.a)(function(e){return r.a.createElement(a.b,Object.assign({},e,{codes:void 0,source:s,examples:u}))})},1029:function(e,t){e.exports="# Textarea\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| autosize | boolean | false | Whether the height changes automatically with the content |\r\n| defaultValue | string \\| number | | default value |\r\n| delay | number | 400 | User input triggers onChange and to check interval, unit: ms.|\r\n| info | (value: string) => string \\| number | - | Infomation |\r\n| name | string | none | The name that accesses data from Form |\r\n| onChange | (value: string) => void | | The callback function for changing value |\r\n| onEnterPress | (value: string) => void | | The callback function for enter key |\r\n| placeholder | string | | The same as the native placeholder tag. |\r\n| popover | 'top-left' \\| 'top' \\| 'top-right' \\| 'bottom-left' \\| 'bottom' \\| 'bottom-right' | | The position where the message pops up |\r\n| rows | number | 4 | The minimum row height. Same as native textarea rows property. |\r\n| maxHeight | number \\| string | - | the maxHeight of the textarea, scroll bars appear after more than | \r\n| style | object | - | Container element style |\r\n| trim | boolean | false | When trim is true, blank characters are automatically deleted when lose focusã€‚ |\r\n| resize | boolean | false | support resize |\r\n| value | string \\| number | | DefaultValue and value can be set at the same time and defaultValue will be overridden by value. <br />In the Form, the value is taken over by the Form and lose efficacy. |\r\n"},1030:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(299);t.default=function(){return a.a.createElement(o.a,{rows:6,placeholder:"input something"})}},1031:function(e,t){e.exports="/**\r\n * - Base\r\n *    -- Multi-line text input box\r\n */\r\nimport React from 'react'\r\nimport { Textarea } from 'megacosm'\r\n\r\nexport default function() {\r\n  return <Textarea rows={6} placeholder=\"input something\" />\r\n}\r\n"},1032:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(299);t.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{rows:2,autosize:!0,maxHeight:200,placeholder:"autosize"}),a.a.createElement("br",null),a.a.createElement(o.a,{rows:2,autosize:!0,value:"a\nu\nt\no\ns\ni\nz\ne",maxHeight:200,placeholder:"autosize"}))}},1033:function(e,t){e.exports="/**\r\n * - Autosize\r\n *    -- When the autosize property is true, component will change height to fit the content. Set maxHeight to limit maximum height.\r\n */\r\nimport React from 'react'\r\nimport { Textarea } from 'megacosm'\r\n\r\nconst text = `a\r\nu\r\nt\r\no\r\ns\r\ni\r\nz\r\ne`\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Textarea rows={2} autosize maxHeight={200} placeholder=\"autosize\" />\r\n      <br />\r\n      <Textarea rows={2} autosize value={text} maxHeight={200} placeholder=\"autosize\" />\r\n    </div>\r\n  )\r\n}\r\n"},1034:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(299);t.default=function(){return a.a.createElement(o.a,{rows:4,trim:!0,placeholder:"input something",info:10})}},1035:function(e,t){e.exports="/**\r\n * - Info\r\n *    -- Set info to number, set the maximum length, and the user's focus shows the length of text that the user has entered.\r\n *    -- If the length is exceeded, the error is reported. It is not hidden.\r\n */\r\nimport React from 'react'\r\nimport { Textarea } from 'megacosm'\r\n\r\nexport default function() {\r\n  return <Textarea rows={4} trim placeholder=\"input something\" info={10} />\r\n}\r\n"},1036:function(e,t,n){"use strict";n.r(t);function r(e){if(!e||0===e.length)return null;var t="total is  ".concat(e.length);return e.length<=20?t:new Error(t)}var a=n(0),o=n.n(a),i=n(299);t.default=function(){return o.a.createElement(i.a,{rows:4,trim:!0,placeholder:"input something",info:r})}},1037:function(e,t){e.exports="/**\r\n * - Custom Info\r\n *    -- can customize the info by setting info as a function\r\n *    -- if the functio return an Error , the info doesn't hide\r\n */\r\nimport React from 'react'\r\nimport { Textarea } from 'megacosm'\r\n\r\nconst renderInfo = value => {\r\n  if (!value || value.length === 0) return null\r\n  const text = `total is  ${value.length}`\r\n  if (value.length <= 20) return text\r\n  return new Error(text)\r\n}\r\n\r\nexport default function() {\r\n  return <Textarea rows={4} trim placeholder=\"input something\" info={renderInfo} />\r\n}\r\n"},299:function(h,e,t){"use strict";var n=t(20),r=t(185),a=t(186),o=t(55),c=t(81),f=t(14),m=t(3),p=t(4),i=t(1),d=t(27),g=t(22),b=t(5),v=t(6),s=t(0),u=t.n(s),s=t(19),l=t(35),x=t(189),w=["autosize","onChange","maxHeight","info","onEnterPress","resize"],t=function(e){Object(b.a)(n,e);var t=Object(v.a)(n);function n(e){var r;return Object(m.a)(this,n),(r=t.call(this,e)).defaultInfo=function(e){if(!e||0===e.length)return null;var t=r.props.info,n="".concat(e.length," / ").concat(t);return e.length<=t?n:new Error(n)},r.state={height:0},r.bindShadow=r.bindShadow.bind(Object(i.a)(r)),r.handleBlur=r.handleBlur.bind(Object(i.a)(r)),r.handleChange=r.handleChange.bind(Object(i.a)(r)),r.handleKeyUp=r.handleKeyUp.bind(Object(i.a)(r)),r.resize=r.resize.bind(Object(i.a)(r)),r.defaultInfo=r.defaultInfo.bind(Object(i.a)(r)),r}return Object(p.a)(n,[{key:"componentDidMount",value:function(){Object(d.a)(Object(g.a)(n.prototype),"componentDidMount",this).call(this),this.props.autosize&&this.resize()}},{key:"componentDidUpdate",value:function(e){this.props.autosize&&e.value!==this.props.value&&this.resize(this.props.value)}},{key:"bindShadow",value:function(e){this.shadow=e}},{key:"resize",value:function(e){!e&&""!==e||(this.shadow.value=e);e=this.shadow?this.shadow.scrollHeight:0;this.setState({height:e})}},{key:"handleChange",value:function(e){this.props.onChange(e.target.value),this.props.autosize&&this.resize(e.target.value)}},{key:"handleKeyUp",value:function(e){var t=this.props.onEnterPress;13===e.keyCode&&t&&t(e.target.value,e)}},{key:"handleBlur",value:function(e){var t=e.target.value,n=this.props,r=n.forceChange,n=n.onBlur;n&&n(e),r(t)}},{key:"renderInfo",value:function(){var e=this.props.info,t="number"!=typeof e;if("function"!=typeof e&&t)return null;t=(t?e:this.defaultInfo)(this.props.value);if(!t)return null;e=t instanceof Error,t=e?t.message:t;return u.a.createElement("div",{key:"info",style:{minWidth:"auto"},className:Object(l.a)("bottom-right",e?"error":"tip")},t)}},{key:"render",value:function(){var e=this.props,t=e.autosize,n=(e.onChange,e.maxHeight),r=(e.info,e.onEnterPress,e.resize),e=Object(f.a)(e,w),a=null==e.value?"":e.value,o=this.state.height||"auto",r=t?Object(l.a)("auto-size"):Object(l.a)(r&&"textarea-resize"),r=[u.a.createElement("textarea",Object.assign({},Object(x.a)(e),{key:"t",value:a,className:r,style:{height:o,maxHeight:n,overflow:"auto"},onChange:this.handleChange,onKeyUp:this.handleKeyUp,onBlur:this.handleBlur})),this.renderInfo()];return t&&r.push(u.a.createElement("textarea",{key:"s",ref:this.bindShadow,className:Object(l.a)("shadow"),rows:e.rows,defaultValue:a})),r}}]),n}(s.b),s=(t.defaultProps={rows:4,resize:!1},t),t=Object(n.compose)(o.a,Object(c.a)({}),Object(r.a)(400),a.a)(s);t.displayName="MegacosmTextarea",e.a=t}}]);