(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[14],{1088:function(e,n,t){"use strict";t.r(n);var o=t(0),a=t.n(o),r=t(486),s=t(487),l=t(500),c=t(45),o=t(1089),o=t.n(o),u=Object(c.a)(o.a),i=[];l.a.start(),l.a.setType("example"),t(1090);var l=l.a.end(),m={example:{text:t(1091),log:l.example}};n.default=Object(r.a)(function(e){return a.a.createElement(s.b,Object.assign({},e,{codes:m,source:u,examples:i}))})},1089:function(e,n){e.exports='# Datum.Form\r\n\r\nThe auxiliary class of Form that process data for collecting and distributing data to input components.\r\n\r\n## Example\r\n\r\n<code name="example" />\r\n\r\n<br />\r\n\r\nSee the example use in [Form](/components/Form)\r\n\r\n## Arguments\r\n\r\n### removeUndefined *boolean*\r\n\r\nWhether to remove the data whose value is undefined. The default value is true.\r\n\r\n### onChange *function(data)*\r\n\r\nThe callback function when the value is changing.\r\n\r\n### value *object*\r\n\r\nThe initial value.\r\n\r\n## Methods\r\n\r\n### getValue *function():object*\r\nGet all values of the current form.\r\n\r\n### setValue *function(object)*\r\nSet new value, will replace the current valueã€‚\r\n\r\n### set *fuction(name, value)*\r\nSet the value specified by name.\r\n\r\n### get *fuction(name)*\r\nGet a single field value.\r\n\r\n### validateFields *function(names)*\r\nVerify specified fields.\r\n\r\n### validateClear *function()*\r\nClear the validate result.'},1090:function(e,n,t){"use strict";t.r(n);t=new(t(57).a.Form);t.setValue({email:"test@123.com",name:{lastName:"Potter"},favors:["red","yellow"]}),t.set("age",20),t.set("name.firstName","Harry"),console.log(t.get("age")),console.log(t.get("name")),console.log(t.get("name.firstName")),console.log(t.get("name.lastName")),console.log(t.get("favors[1]")),t.set("favors[2]","blue"),console.log(t.get("favors")),console.log(t.getValue())},1091:function(e,n){e.exports="import { Datum } from 'megacosm'\r\n\r\nconst datum = new Datum.Form()\r\n\r\ndatum.setValue({ email: 'test@123.com', name: { lastName: 'Potter' }, favors: ['red', 'yellow'] })\r\ndatum.set('age', 20)\r\ndatum.set('name.firstName', 'Harry')\r\nconsole.log(datum.get('age'))\r\nconsole.log(datum.get('name'))\r\nconsole.log(datum.get('name.firstName'))\r\nconsole.log(datum.get('name.lastName'))\r\nconsole.log(datum.get('favors[1]'))\r\ndatum.set('favors[2]', 'blue')\r\nconsole.log(datum.get('favors'))\r\nconsole.log(datum.getValue())\r\n"},500:function(e,n,t){"use strict";var o=t(4),a=t(5),r=window.console,s=function(){function e(){Object(o.a)(this,e),this.logs={default:[]},this.current=this.logs.default}return Object(a.a)(e,[{key:"setType",value:function(e){this.logs[e]||(this.logs[e]=[]),this.current=this.logs[e]}},{key:"log",value:function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];var o=n.map(function(e){return"".concat(JSON.stringify(e,function(e,n){return"function"==typeof n?"fn#fn".concat(n.toString(),"fn#fn"):n},2))});this.current.push(o)}}]),e}();n.a={start:function(){window.console=new s},setType:function(e){window.console.setType(e)},end:function(){var e=window.console.logs;return window.console=r,e}}}}]);