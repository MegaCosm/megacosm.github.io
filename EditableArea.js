(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[20],{299:function(c,e,t){"use strict";var n=t(20),a=t(185),r=t(186),o=t(55),h=t(81),d=t(14),p=t(3),b=t(4),i=t(1),f=t(27),m=t(22),v=t(5),g=t(6),s=t(0),l=t.n(s),s=t(19),u=t(35),y=t(189),w=["autosize","onChange","maxHeight","info","onEnterPress","resize"],t=function(e){Object(v.a)(n,e);var t=Object(g.a)(n);function n(e){var a;return Object(p.a)(this,n),(a=t.call(this,e)).defaultInfo=function(e){if(!e||0===e.length)return null;var t=a.props.info,n="".concat(e.length," / ").concat(t);return e.length<=t?n:new Error(n)},a.state={height:0},a.bindShadow=a.bindShadow.bind(Object(i.a)(a)),a.handleBlur=a.handleBlur.bind(Object(i.a)(a)),a.handleChange=a.handleChange.bind(Object(i.a)(a)),a.handleKeyUp=a.handleKeyUp.bind(Object(i.a)(a)),a.resize=a.resize.bind(Object(i.a)(a)),a.defaultInfo=a.defaultInfo.bind(Object(i.a)(a)),a}return Object(b.a)(n,[{key:"componentDidMount",value:function(){Object(f.a)(Object(m.a)(n.prototype),"componentDidMount",this).call(this),this.props.autosize&&this.resize()}},{key:"componentDidUpdate",value:function(e){this.props.autosize&&e.value!==this.props.value&&this.resize(this.props.value)}},{key:"bindShadow",value:function(e){this.shadow=e}},{key:"resize",value:function(e){!e&&""!==e||(this.shadow.value=e);e=this.shadow?this.shadow.scrollHeight:0;this.setState({height:e})}},{key:"handleChange",value:function(e){this.props.onChange(e.target.value),this.props.autosize&&this.resize(e.target.value)}},{key:"handleKeyUp",value:function(e){var t=this.props.onEnterPress;13===e.keyCode&&t&&t(e.target.value,e)}},{key:"handleBlur",value:function(e){var t=e.target.value,n=this.props,a=n.forceChange,n=n.onBlur;n&&n(e),a(t)}},{key:"renderInfo",value:function(){var e=this.props.info,t="number"!=typeof e;if("function"!=typeof e&&t)return null;t=(t?e:this.defaultInfo)(this.props.value);if(!t)return null;e=t instanceof Error,t=e?t.message:t;return l.a.createElement("div",{key:"info",style:{minWidth:"auto"},className:Object(u.a)("bottom-right",e?"error":"tip")},t)}},{key:"render",value:function(){var e=this.props,t=e.autosize,n=(e.onChange,e.maxHeight),a=(e.info,e.onEnterPress,e.resize),e=Object(d.a)(e,w),r=null==e.value?"":e.value,o=this.state.height||"auto",a=t?Object(u.a)("auto-size"):Object(u.a)(a&&"textarea-resize"),a=[l.a.createElement("textarea",Object.assign({},Object(y.a)(e),{key:"t",value:r,className:a,style:{height:o,maxHeight:n,overflow:"auto"},onChange:this.handleChange,onKeyUp:this.handleKeyUp,onBlur:this.handleBlur})),this.renderInfo()];return t&&a.push(l.a.createElement("textarea",{key:"s",ref:this.bindShadow,className:Object(u.a)("shadow"),rows:e.rows,defaultValue:r})),a}}]),n}(s.b),s=(t.defaultProps={rows:4,resize:!1},t),t=Object(n.compose)(o.a,Object(h.a)({}),Object(a.a)(400),r.a)(s);t.displayName="MegacosmTextarea",e.a=t},318:function(c,e,t){"use strict";var n=t(20),a=t(185),h=t(186),d=t(55),p=t(3),b=t(4),r=t(1),f=t(5),m=t(6),o=t(0),l=t.n(o),o=t(16),v=t.n(o),g=t(299),y=t(83),w=t(82),o=t(808),o=t.n(o),i=t(12),u=Object(i.a)(o.a,"editableArea"),j=t(50),s=t(25);i=function(e){Object(f.a)(n,e);var t=Object(m.a)(n);function n(e){return Object(p.a)(this,n),(e=t.call(this,e)).state={showTextarea:!1},e.bindContainer=e.bindElement.bind(Object(r.a)(e),"container"),e.bindInput=e.bindElement.bind(Object(r.a)(e),"input"),e.renderInput=e.renderInput.bind(Object(r.a)(e)),e.renderTextarea=e.renderTextarea.bind(Object(r.a)(e)),e.onChange=e.onChange.bind(Object(r.a)(e)),e.onBlur=e.onBlur.bind(Object(r.a)(e)),e.autoFocus=e.autoFocus.bind(Object(r.a)(e)),e.handleFocus=e.handleFocus.bind(Object(r.a)(e)),e.showPop=e.updateShowTextarea.bind(Object(r.a)(e),!0),e.hidePop=e.updateShowTextarea.bind(Object(r.a)(e),!1),e.handleClear=e.onChange.bind(Object(r.a)(e),""),e}return Object(b.a)(n,[{key:"componentDidUpdate",value:function(e,t){var n=this.state.showTextarea;t.showTextarea!==n&&n&&this.autoFocus()}},{key:"onChange",value:function(e){var t;"function"==typeof(t=this.props.onChange)&&t(e)}},{key:"onBlur",value:function(e){var t=this.props.onBlur;this.hidePop(),"function"==typeof t&&t(e)}},{key:"updateShowTextarea",value:function(e){e&&this.input&&(this.width=Object(s.getParent)(this.input,".".concat(u("input"))).offsetWidth),this.setState({showTextarea:e})}},{key:"handleFocus",value:function(e){var t=this.props.onFocus;"function"==typeof t&&t(e)}},{key:"bindElement",value:function(e,t){this[e]=t}},{key:"autoFocus",value:function(){var e;!this.container||(e=this.container.querySelector(".".concat(u("text-area")," textarea.so-input-auto-size")))&&s.focusElement.end(e)}},{key:"renderTextarea",value:function(){var e=this.state.showTextarea,t=this.props,n=t.delay,a=t.placeholder,r=t.maxHeight,t=t.value;return e?l.a.createElement("div",{ref:this.bindContainer},l.a.createElement(g.a,{className:u("text-area"),autosize:!0,value:t,rows:1,delay:n,onChange:this.onChange,onBlur:this.onBlur,onFocus:this.handleFocus,placeholder:a,maxHeight:r})):null}},{key:"renderInput",value:function(){var e=this.props,t=e.placeholder,n=e.disabled,e=e.value;return l.a.createElement(y.a,{forwardedRef:this.bindInput,placeholder:t,value:function(e){if(!e&&0!==e)return"";var t=String(e).split("\n");return 1<t.length?"".concat(t[0],"..."):String(e)}(e),className:u("input"),onFocus:this.showPop,disabled:n})}},{key:"render",value:function(){var e=this.state.showTextarea,t=this.props,n=t.width,a=t.style,r=t.className,o=t.bordered,i=t.clearable,s=t.getPopupContainer,t=t.value,r=v()(r,u("_",!o&&"none-bordered")),o=Object.assign({width:n},a),n={width:this.width};return l.a.createElement("div",{className:r,style:o},this.renderInput(),l.a.createElement(w.a,{visible:e,showArrow:!1,className:u("popover"),position:"cover",style:n,getPopupContainer:s},this.renderTextarea()),i&&t?l.a.createElement("div",{className:u("clear"),onClick:this.handleClear},j.a.CloseCircle):null)}}]),n}(l.a.PureComponent),i.defaultProps={bordered:!1},o=i,t=Object(n.compose)(d.a,Object(a.a)(400),h.a)(o);t.displayName="MegacosmEditableArea",e.a=t},805:function(u,e,t){"use strict";t.r(e);var n=t(0),a=t.n(n),n=t(499),r=t(501),o=t(54),i=t(806),i=t.n(i),s=Object(o.a)(i.a),l=[{name:"01-base",title:Object(o.a)("Base \n Editablearea displays one line by default, and more than one line is replaced by ..."),component:t(807).default,rawText:t(809)},{name:"02-controlled",title:Object(o.a)("Controlled \n Pass value and onChange props to make the component controlled"),component:t(810).default,rawText:t(811)},{name:"03-container",title:Object(o.a)("Custom container \n use getPopupContainer return target container"),component:t(812).default,rawText:t(813)}];e.default=Object(n.a)(function(e){return a.a.createElement(r.b,Object.assign({},e,{codes:void 0,source:s,examples:l}))})},806:function(e,t){e.exports="# EditableArea\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| defaultValue | string | none | Set initial value |\r\n| value | string | none | The value passed in when controlled |\r\n| className | string | none | The outermost extension className of a component |\r\n| onChange | (value: string) => void | none | Callback function when the value changes, making the component controlled when set with value |\r\n| style | object | none | The outermost extension style of a component |\r\n| bordered | boolean | false | Whether to show the border |\r\n| disabled | boolean | false | Whether to disable |\r\n| clearable | boolean | true | Whether to show the clear button |\r\n| placeholder | string | none | The same as the native placeholder tag |\r\n| delay | number | 400 | User input triggers the onChange and to check interval, unit: ms. |\r\n| trim | boolean | false | When trim is true, blank characters are automatically deleted when lose focus |\r\n| onBlur | (e: MouseEvent) => void | none | blur event |\r\n| onFocus | (e: MouseEvent) => void | none | focus event |\r\n| maxHeight | number \\| string | - | the maxHeight of the textarea, scroll bars appear after more than | \r\n| getPopupContainer | () => HTMLElement | none | Custom Popover container, override the default behavior which is rendering under the body, () => DOMElement |\r\n| width | number \\| string | none | width of the editablearea |"},807:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(318);t.default=function(){return r.a.createElement(o.a,{bordered:!0,placeholder:"input something"})}},808:function(e,t){},809:function(e,t){e.exports="/**\r\n * - Base\r\n *    -- Editablearea displays one line by default, and more than one line is replaced by ...\r\n */\r\n\r\nimport React from 'react'\r\nimport { EditableArea } from 'megacosm'\r\n\r\nexport default function() {\r\n  return <EditableArea bordered placeholder=\"input something\" />\r\n}\r\n"},810:function(e,t,n){"use strict";n.r(t);var a=n(28),r=n(0),o=n.n(r),i=n(318);t.default=function(){var e=Object(r.useState)(""),e=Object(a.a)(e,2),t=e[0],n=e[1];return o.a.createElement(i.a,{value:t,placeholder:"Input something",onChange:function(e){n(e)},width:400,onBlur:function(){console.log("EditableArea: onBlur")}})}},811:function(e,t){e.exports="/**\r\n * - Controlled\r\n *    -- Pass value and onChange props to make the component controlled\r\n */\r\n\r\nimport React, { useState } from 'react'\r\nimport { EditableArea } from 'megacosm'\r\n\r\nexport default function() {\r\n  const [value, setValue] = useState('')\r\n  return (\r\n    <EditableArea\r\n      value={value}\r\n      placeholder=\"Input something\"\r\n      onChange={val => {\r\n        setValue(val)\r\n      }}\r\n      width={400}\r\n      onBlur={() => {\r\n        console.log('EditableArea: onBlur')\r\n      }}\r\n    />\r\n  )\r\n}\r\n"},812:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(318);t.default=function(){return r.a.createElement("div",{id:"popup-target",style:{height:200,overflow:"auto",position:"relative",padding:10}},r.a.createElement("div",{style:{height:100}}),r.a.createElement(o.a,{bordered:!0,placeholder:"scroll in container",getPopupContainer:function(){return document.querySelector("#popup-target")},maxHeight:100}),r.a.createElement("div",{style:{height:140}}))}},813:function(e,t){e.exports="/**\r\n * - Custom container\r\n *    -- use getPopupContainer return target container\r\n */\r\nimport React from 'react'\r\nimport { EditableArea } from 'megacosm'\r\n\r\nexport default function() {\r\n  return (\r\n    <div id=\"popup-target\" style={{ height: 200, overflow: 'auto', position: 'relative', padding: 10 }}>\r\n      <div style={{ height: 100 }} />\r\n      <EditableArea\r\n        bordered\r\n        placeholder=\"scroll in container\"\r\n        getPopupContainer={() => document.querySelector('#popup-target')}\r\n        maxHeight={100}\r\n      />\r\n      <div style={{ height: 140 }} />\r\n    </div>\r\n  )\r\n}\r\n"}}]);