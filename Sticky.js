(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[40],{1427:function(t,e,n){"use strict";n.r(e);var r=n(0),o=n.n(r),i=n(488),a=n(489),c=n(45),r=n(1428),r=n.n(r),l=Object(c.a)(r.a),m=[{name:"1-top",title:Object(c.a)("Basic \n Sticky 20px to top"),component:n(1429).default,rawText:n(1430)},{name:"2-element",title:Object(c.a)("Element \n Sticky to element"),component:n(1431).default,rawText:n(1432)},{name:"3-bottom",title:Object(c.a)("Position \n Sticky to bottom"),component:n(1433).default,rawText:n(1434)}];e.default=Object(i.a)(function(t){return o.a.createElement(a.b,Object.assign({},t,{codes:void 0,source:l,examples:m}))})},1428:function(t,e){t.exports="# Sticky\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| bottom | number | - | Offsets from the bottom. |\r\n| className | string | - | Extend className |\r\n| style | object | - | Extend style. \bThe default z-Index after triggering the float is 900, and you can modify the z-Index of the style to change. |\r\n| target | string \\| HTMLElement | none | Attached target. the default is the document.body. You can pass in an HTMLElement or css selector, and the target must be an ancestor node of the Sticky component. |\r\n| top | number | none | Offsets from the top. |\r\n| css | bool | true | use css position:sticky while target is ordered |\r\n| onChange | (isSticky: boolean) => void | null | When the adsorption effect, trigger the callback |\r\n"},1429:function(t,e,n){"use strict";n.r(e);var r=n(0),o=n.n(r),i=n(284),a=n(98);e.default=function(){return o.a.createElement(i.a,{top:20},o.a.createElement(a.a,{onClose:!0},o.a.createElement("h3",null,"Some content."),"Sticky 20px to top."))}},1430:function(t,e){t.exports="/**\r\n * - Basic\r\n *    -- Sticky 20px to top\r\n */\r\nimport React from 'react'\r\nimport { Alert, Sticky } from 'megacosm'\r\n\r\nexport default function() {\r\n  return (\r\n    <Sticky top={20}>\r\n      <Alert onClose>\r\n        <h3>Some content.</h3>\r\n        Sticky 20px to top.\r\n      </Alert>\r\n    </Sticky>\r\n  )\r\n}\r\n"},1431:function(t,e,n){"use strict";n.r(e),n.d(e,"default",function(){return s});var r=n(4),o=n(5),i=n(6),a=n(7),e=n(0),c=n.n(e),l=n(284),m=n(98),s=function(t){Object(i.a)(n,t);var e=Object(a.a)(n);function n(){return Object(r.a)(this,n),e.apply(this,arguments)}return Object(o.a)(n,[{key:"componentDidMount",value:function(){this.element.scrollTop=400}},{key:"render",value:function(){var e=this;return c.a.createElement("div",{id:"sticky_element",ref:function(t){e.element=t},style:{position:"relative",height:400,overflow:"auto"}},c.a.createElement("div",{style:{height:1600,background:"#f2f2f2"}},c.a.createElement("div",{style:{height:600}},"Some text."),c.a.createElement(l.a,{top:0,bottom:0,target:"#sticky_element"},c.a.createElement(m.a,{style:{marginBottom:0},type:"info"},"Sticky to element"))))}}]),n}(e.PureComponent)},1432:function(t,e){t.exports="/**\r\n * - Element\r\n *    -- Sticky to element\r\n */\r\nimport React, { PureComponent } from 'react'\r\nimport { Alert, Sticky } from 'megacosm'\r\n\r\nexport default class extends PureComponent {\r\n  componentDidMount() {\r\n    this.element.scrollTop = 400\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"sticky_element\"\r\n        ref={el => {\r\n          this.element = el\r\n        }}\r\n        style={{ position: 'relative', height: 400, overflow: 'auto' }}\r\n      >\r\n        <div style={{ height: 1600, background: '#f2f2f2' }}>\r\n          <div style={{ height: 600 }}>Some text.</div>\r\n          <Sticky top={0} bottom={0} target=\"#sticky_element\">\r\n            <Alert style={{ marginBottom: 0 }} type=\"info\">\r\n              Sticky to element\r\n            </Alert>\r\n          </Sticky>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},1433:function(t,e,n){"use strict";n.r(e);var r=n(0),o=n.n(r),i=n(284),a=n(98);e.default=function(){return o.a.createElement(i.a,{bottom:0},o.a.createElement(a.a,{style:{marginBottom:0},onClose:!0},"Sticky at bottom."))}},1434:function(t,e){t.exports="/**\r\n * - Position\r\n *    -- Sticky to bottom\r\n */\r\nimport React from 'react'\r\nimport { Alert, Sticky } from 'megacosm'\r\n\r\nexport default function() {\r\n  return (\r\n    <Sticky bottom={0}>\r\n      <Alert style={{ marginBottom: 0 }} onClose>\r\n        Sticky at bottom.\r\n      </Alert>\r\n    </Sticky>\r\n  )\r\n}\r\n"}}]);