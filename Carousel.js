(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[9],{1101:function(l,n,e){"use strict";e.r(n);var t=e(0),i=e.n(t),t=e(499),r=e(501),a=e(54),o=e(1102),o=e.n(o),s=Object(a.a)(o.a),c=[{name:"1-base",title:Object(a.a)("Base \n The carousel component provides three modes of animation transition. Change the option to view the result."),component:e(1103).default,rawText:e(1105)},{name:"2-custom-indicator",title:Object(a.a)("Custom Indicator \n Indicators can be customized when indicatorType is a function."),component:e(1106).default,rawText:e(1108)}];n.default=Object(t.a)(function(n){return i.a.createElement(r.b,Object.assign({},n,{codes:void 0,source:s,examples:c}))})},1102:function(n,e){n.exports="# Carousel\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| animation | string | 'slide' | animation effects, options: <br />slide - horizontal sliding<br />slide-y - vertical sliding<br />fade - fading |\r\n| className | string | none | extend className |\r\n| indicatorPosition | 'left' \\| 'center' \\| 'right'  | 'center' | the position of indicator |\r\n| indicatorType | (current: number, moveTo: () => void) => ReactNode \\| string | 'circle' | the style of indicator, string options: \\['circle', 'number', 'line'], using function for custom styles |\r\n| interval | number | 0 | the interval of animation, When it is not 0, play automatically |\r\n"},1103:function(t,n,e){"use strict";e.r(n),e.d(n,"default",function(){return m});var i=e(29),r=e(3),a=e(4),o=e(5),s=e(6),n=e(0),c=e.n(n),l=e(191),u=e(320),d={fontSize:40,color:"#fff",display:"flex",margin:"auto"},m=function(n){Object(o.a)(t,n);var e=Object(s.a)(t);function t(n){return Object(r.a)(this,t),(n=e.call(this,n)).state={interval:5e3,animation:"slide",indicatorType:"circle",indicatorPosition:"center"},n}return Object(a.a)(t,[{key:"propChange",value:function(n,e){this.setState(Object(i.a)({},n,e))}},{key:"render",value:function(){var n=this.state,e=n.interval,t=n.animation,i=n.indicatorPosition,n=n.indicatorType;return c.a.createElement("div",null,c.a.createElement("div",{style:{marginBottom:20}},"animation:"," ",c.a.createElement(l.a,{data:["slide","slide-y","fade"],keygen:!0,style:{width:100},value:t,size:"small",onChange:this.propChange.bind(this,"animation")}),"　indicatorPosition: ",c.a.createElement(l.a,{data:["left","center","right"],keygen:!0,style:{width:90},value:i,size:"small",onChange:this.propChange.bind(this,"indicatorPosition")}),"　indicatorType: ",c.a.createElement(l.a,{data:["circle","number","line"],keygen:!0,style:{width:90},value:n,size:"small",onChange:this.propChange.bind(this,"indicatorType")})),c.a.createElement(u.a,{style:{width:500,height:300},interval:e,animation:t,indicatorPosition:i,indicatorType:n},c.a.createElement("div",{style:{background:"#666",display:"flex"}},c.a.createElement("div",{style:d},"Page 1")),c.a.createElement("div",{style:{background:"#fa8c16",display:"flex"}},c.a.createElement("div",{style:d},"Page 2")),c.a.createElement("div",{style:{background:"#eb2f96",display:"flex"}},c.a.createElement("div",{style:d},"Page 3")),c.a.createElement("a",null,c.a.createElement("img",{alt:"",style:{width:"100%",height:"100%"},src:"../../../images/1_b.jpg"}))))}}]),t}(n.Component)},1104:function(n,e){},1105:function(n,e){n.exports="/**\r\n * - Base\r\n *    -- The carousel component provides three modes of animation transition. Change the option to view the result.\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Carousel, Select } from 'megacosm'\r\n\r\nconst containerStyle = {\r\n  fontSize: 40,\r\n  color: '#fff',\r\n  display: 'flex',\r\n  margin: 'auto',\r\n}\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      interval: 5000,\r\n      animation: 'slide',\r\n      indicatorType: 'circle',\r\n      indicatorPosition: 'center',\r\n    }\r\n  }\r\n\r\n  propChange(key, value) {\r\n    this.setState({ [key]: value })\r\n  }\r\n\r\n  render() {\r\n    const { interval, animation, indicatorPosition, indicatorType } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 20 }}>\r\n          animation:{' '}\r\n          <Select\r\n            data={['slide', 'slide-y', 'fade']}\r\n            keygen\r\n            style={{ width: 100 }}\r\n            value={animation}\r\n            size=\"small\"\r\n            onChange={this.propChange.bind(this, 'animation')}\r\n          />\r\n          {'　indicatorPosition: '}\r\n          <Select\r\n            data={['left', 'center', 'right']}\r\n            keygen\r\n            style={{ width: 90 }}\r\n            value={indicatorPosition}\r\n            size=\"small\"\r\n            onChange={this.propChange.bind(this, 'indicatorPosition')}\r\n          />\r\n          {'　indicatorType: '}\r\n          <Select\r\n            data={['circle', 'number', 'line']}\r\n            keygen\r\n            style={{ width: 90 }}\r\n            value={indicatorType}\r\n            size=\"small\"\r\n            onChange={this.propChange.bind(this, 'indicatorType')}\r\n          />\r\n        </div>\r\n\r\n        <Carousel\r\n          style={{ width: 500, height: 300 }}\r\n          interval={interval}\r\n          animation={animation}\r\n          indicatorPosition={indicatorPosition}\r\n          indicatorType={indicatorType}\r\n        >\r\n          <div style={{ background: '#666', display: 'flex' }}>\r\n            <div style={containerStyle}>Page 1</div>\r\n          </div>\r\n          <div style={{ background: '#fa8c16', display: 'flex' }}>\r\n            <div style={containerStyle}>Page 2</div>\r\n          </div>\r\n          <div style={{ background: '#eb2f96', display: 'flex' }}>\r\n            <div style={containerStyle}>Page 3</div>\r\n          </div>\r\n          <a>\r\n            <img alt=\"\" style={{ width: '100%', height: '100%' }} src=\"../../../images/1_b.jpg\" />\r\n          </a>\r\n        </Carousel>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},1106:function(l,n,e){"use strict";e.r(n);var t=e(0),o=e.n(t),i=e(320),t=e(16),s=e.n(t),r=(e(1107),{fontSize:40,color:"#fff",display:"flex",margin:"auto"}),c=["S","H","I","N","E"];function a(r,a){return o.a.createElement("div",{className:"indicator"},c.map(function(n,e){var t=r===e,i=s()("indicator-item",t&&"active"),t=t?{animation:"indicator-rise ".concat(5,"s linear")}:{};return o.a.createElement("div",{key:n,onClick:function(){return a(e)},className:i},o.a.createElement("span",null,n),o.a.createElement("div",{className:"indicator-progress"},o.a.createElement("div",{className:"fg",style:t}),o.a.createElement("div",{className:"bg"})))}))}n.default=function(){return o.a.createElement(i.a,{indicatorType:a,style:{width:500,height:300},interval:5e3},c.map(function(n){return o.a.createElement("div",{key:n,style:{background:"#2e97f1",display:"flex"}},o.a.createElement("div",{style:r},n))}))}},1107:function(n,e){},1108:function(n,e){n.exports="/**\r\n * - Custom Indicator\r\n *    -- Indicators can be customized when indicatorType is a function.\r\n */\r\nimport React from 'react'\r\nimport { Carousel } from 'megacosm'\r\nimport classnames from 'classnames'\r\nimport './style-2-custom-indicator.less'\r\n\r\nconst duration = 5000\r\nconst containerStyle = {\r\n  fontSize: 40,\r\n  color: '#fff',\r\n  display: 'flex',\r\n  margin: 'auto',\r\n}\r\n\r\nconst items = ['S', 'H', 'I', 'N', 'E']\r\n\r\nfunction indicatorSwitch(current, moveTo) {\r\n  return (\r\n    <div className=\"indicator\">\r\n      {items.map((item, index) => {\r\n        const isActive = current === index\r\n        const itemClassname = classnames('indicator-item', isActive && 'active')\r\n        const animationStyle = isActive ? { animation: `indicator-rise ${duration / 1000}s linear` } : {}\r\n        return (\r\n          <div key={item} onClick={() => moveTo(index)} className={itemClassname}>\r\n            <span>{item}</span>\r\n            <div className=\"indicator-progress\">\r\n              <div className=\"fg\" style={animationStyle} />\r\n              <div className=\"bg\" />\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Carousel indicatorType={indicatorSwitch} style={{ width: 500, height: 300 }} interval={duration}>\r\n      {items.map(item => (\r\n        <div key={item} style={{ background: '#2e97f1', display: 'flex' }}>\r\n          <div style={containerStyle}>{item}</div>\r\n        </div>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\n/* style-2-custom-indicator.css\r\n@keyframes indicator-rise {\r\n  from {\r\n    width: 0;\r\n  }\r\n  to {\r\n    width: 100%;\r\n  }\r\n}\r\ndiv.indicator {\r\n  text-align: center;\r\n  user-select: none;\r\n  float: left;\r\n}\r\ndiv.indicator-item {\r\n  margin-right: 10px;\r\n  float: left;\r\n  width: 36px;\r\n  height: 30px;\r\n  font-size: 20px;\r\n  color: #ffffff50;\r\n  cursor: pointer;\r\n}\r\ndiv.indicator-item.active {\r\n  color: #fff;\r\n}\r\ndiv.indicator .indicator-progress {\r\n  position: relative;\r\n}\r\ndiv.indicator .indicator-progress > div {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 2px;\r\n}\r\ndiv.indicator .indicator-progress .bg {\r\n  width: 100%;\r\n  background: #ffffff50;\r\n}\r\ndiv.indicator .indicator-progress .fg {\r\n  width: 0;\r\n  background: #ffffff;\r\n}\r\n*/\r\n"},320:function(d,u,n){"use strict";var e=n(13),i=n(3),r=n(4),a=n(1),o=n(27),m=n(22),p=n(5),h=n(6),s=n(0),c=n.n(s),f=n(16),v=n.n(f),f=n(19),y=n(31),g=n(75),b=n(1104),b=n.n(b),t=n(12),l=Object(t.a)(b.a,"carousel"),k=function(n){Object(p.a)(t,n);var e=Object(h.a)(t);function t(){return Object(i.a)(this,t),e.apply(this,arguments)}return Object(r.a)(t,[{key:"render",value:function(){var n=this.props,e=n.children,t=n.current,n=n.pre,t=v()(l("item",t&&"item-current",n&&"item-pre"),this.props.className);return c.a.createElement("div",{className:t},e)}}]),t}(s.PureComponent),C=n(90),t=function(n){Object(p.a)(t,n);var e=Object(h.a)(t);function t(n){return Object(i.a)(this,t),(n=e.call(this,n)).state={current:0,direction:"stop",pre:0},n.handleMouseIn=n.handleMouseIn.bind(Object(a.a)(n)),n.handleMouseOut=n.handleMouseOut.bind(Object(a.a)(n)),n.moveTo=n.moveTo.bind(Object(a.a)(n)),n}return Object(r.a)(t,[{key:"componentDidMount",value:function(){Object(o.a)(Object(m.a)(t.prototype),"componentDidMount",this).call(this),this.setNext(1)}},{key:"componentDidUpdate",value:function(){1<this.count&&!this.$timeout&&this.setNext(this.state.current+1)}},{key:"componentWillUnmount",value:function(){Object(o.a)(Object(m.a)(t.prototype),"componentWillUnmount",this).call(this),this.$timeout&&(clearTimeout(this.$timeout),this.$timeout=null)}},{key:"setNext",value:function(n){var e=this,t=this.props.interval;0<t&&1<this.count&&(this.$timeout&&(clearTimeout(this.$timeout),this.$timeout=null),this.$timeout=setTimeout(function(){e.moveTo(n)},t))}},{key:"moveTo",value:function(n){var e,t=this.props.onMove,i=this.state.current;n!==i&&(e=i<n?"forward":"backward",n>=this.count&&(e="forward",n=0),this.setState({pre:i,current:n,direction:e}),this.setNext(n+1),t&&t(n,{prev:i,direction:e,moveTo:this.moveTo}))}},{key:"handleMouseIn",value:function(){this.mouseInView=!0}},{key:"handleMouseOut",value:function(){this.mouseInView=!1,this.setNext(this.state.current+1)}},{key:"renderItems",value:function(){var n=this.state,t=n.current,i=n.pre;return s.Children.toArray(this.props.children).map(function(n,e){return c.a.createElement(k,{key:e,current:e===t,pre:e===i&&i!==t},n)})}},{key:"renderCustomIndicator",value:function(){var n=this.props,e=n.indicatorType,n=n.indicatorPosition,t=this.state.current,n=l("indicator","indicator-".concat(n));return c.a.createElement("div",{className:n},e(t,this.moveTo))}},{key:"renderIndicator",value:function(){var e=this,n=this.props,t=n.indicatorPosition,i=n.indicatorType;if("function"==typeof i)return this.renderCustomIndicator();var r=this.state.current,n=l("indicator","indicator-".concat(t),"indicator-".concat(i)),t=Object(g.range)(this.count).map(function(n){return c.a.createElement("a",{key:n,onClick:e.moveTo.bind(e,n),className:l(r===n&&"indicator-active")},"number"===i?n+1:"")});return c.a.createElement("div",{className:n},t)}},{key:"render",value:function(){this.count=s.Children.toArray(this.props.children).length;var n=this.props,e=n.animation,n=n.style,t=this.state.direction,e=v()(l("_",e,t),this.props.className);return c.a.createElement("div",Object.assign({className:e,style:n},Object(C.a)(this.props)),this.renderItems(),1<this.count&&this.renderIndicator())}}]),t}(f.b);t.defaultProps=Object(e.a)(Object(e.a)({},y.a),{},{animation:"slide",indicatorPosition:"center",indicatorType:"circle",interval:0}),t.displayName="MegacosmCarousel",u.a=t}}]);