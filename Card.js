(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[7],{1387:function(e,a,t){"use strict";t.r(a);var r=t(0),n=t.n(r),o=t(488),l=t(489),d=t(45),r=t(1388),r=t.n(r),c=Object(d.a)(r.a),s=[{name:"1-base",title:Object(d.a)("Base \n The card is composed of three components: Header, Body, and Footer. It can be combined or used separately."),component:t(1389).default,rawText:t(1390)},{name:"2-boxshadow",title:Object(d.a)("BoxShadow \n Set the shadow property to determined how to display the shadow."),component:t(1391).default,rawText:t(1392)},{name:"3-form",title:Object(d.a)("Form \n Use Card.submit to trigger the submimt event of the form in the card."),component:t(1393).default,rawText:t(1394)},{name:"4-collapse",title:Object(d.a)("Collapse \n Set collapsible can collapse the Card panel."),component:t(1395).default,rawText:t(1396)},{name:"5-accordion",title:Object(d.a)("Accordion \n Put a group of Card in the Card.Accordion, only one panel can be expanded at the same time."),component:t(1397).default,rawText:t(1398)}];a.default=Object(o.a)(function(e){return n.a.createElement(l.b,Object.assign({},e,{codes:void 0,source:c,examples:s}))})},1388:function(e,a){e.exports="# Card\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Card\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| className | string | none | Extend className |\r\n| collapsible | boolean \\| 'bottom' | false | Whether can be collapsedï¼Œ'bottom' can collaps on bottom |\r\n| collapsed | boolean | - | Whether to be collapsed. |\r\n| defaultCollapsed | boolean | true | Initial collapsed state |\r\n| onCollapse | () => void | - | Callback when collapsed state changed |\r\n| shadow | true \\| false \\| 'hover' | false | Whether to show the shadow.<br />'hover' - Display it when the mouse is over the element.<br />true - Always show<br />false - Never show |\r\n| style | object | - | Container element style |\r\n| id | any | none | Card.Accordion expand controlled key |\r\n\r\n### Card.Header, Card.Body, Card.Footer\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| className | string | - | Extend className |\r\n| style | object | - | Element style |\r\n\r\n### Card.Accordion\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| active | any | none | Active value. It is -1 when fully closed. Used in controlled state. be id while Card.id setted |\r\n| defaultActive | any | 0 | The default active value for uncontrolled state, be id while Card.id setted|\r\n| onChange | () => void | none | The callback function when the panel is opened |\r\n\r\n### Card.Submit\r\n\r\nThe same as [Button](/components/Button)\r\n"},1389:function(e,a,t){"use strict";t.r(a);var r=t(0),n=t.n(r),o=t(279),l={width:240,height:300,display:"inline-flex",marginRight:20},d={background:"#f7f7f7"};a.default=function(){return n.a.createElement("div",null,n.a.createElement(o.a,{style:l},n.a.createElement(o.a.Header,null,"Header"),n.a.createElement(o.a.Body,null,"Body"),n.a.createElement(o.a.Footer,null,"Footer")),n.a.createElement(o.a,{style:l},n.a.createElement(o.a.Header,{style:d},"Header"),n.a.createElement(o.a.Body,null,"Body"),n.a.createElement(o.a.Footer,{style:d},"Footer")))}},1390:function(e,a){e.exports="/**\r\n * - Base\r\n *    -- The card is composed of three components: Header, Body, and Footer. It can be combined or used separately.\r\n */\r\nimport React from 'react'\r\nimport { Card } from 'megacosm'\r\n\r\nconst cardStyle = {\r\n  width: 240,\r\n  height: 300,\r\n  display: 'inline-flex',\r\n  marginRight: 20,\r\n}\r\nconst gray = { background: '#f7f7f7' }\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Card style={cardStyle}>\r\n        <Card.Header>Header</Card.Header>\r\n        <Card.Body>Body</Card.Body>\r\n        <Card.Footer>Footer</Card.Footer>\r\n      </Card>\r\n\r\n      <Card style={cardStyle}>\r\n        <Card.Header style={gray}>Header</Card.Header>\r\n        <Card.Body>Body</Card.Body>\r\n        <Card.Footer style={gray}>Footer</Card.Footer>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"},1391:function(e,a,t){"use strict";t.r(a);var r=t(0),n=t.n(r),o=t(279),l={width:140,display:"inline-flex",marginRight:20};a.default=function(){return n.a.createElement("div",null,n.a.createElement(o.a,{style:l},n.a.createElement(o.a.Body,null,"Never")),n.a.createElement(o.a,{style:l,shadow:"hover"},n.a.createElement(o.a.Body,null,"Hover")),n.a.createElement(o.a,{style:l,shadow:!0},n.a.createElement(o.a.Body,null,"Always")))}},1392:function(e,a){e.exports="/**\r\n * - BoxShadow\r\n *    -- Set the shadow property to determined how to display the shadow.\r\n */\r\nimport React from 'react'\r\nimport { Card } from 'megacosm'\r\n\r\nconst cardStyle = {\r\n  width: 140,\r\n  display: 'inline-flex',\r\n  marginRight: 20,\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Card style={cardStyle}>\r\n        <Card.Body>Never</Card.Body>\r\n      </Card>\r\n\r\n      <Card style={cardStyle} shadow=\"hover\">\r\n        <Card.Body>Hover</Card.Body>\r\n      </Card>\r\n\r\n      <Card style={cardStyle} shadow>\r\n        <Card.Body>Always</Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"},1393:function(e,a,t){"use strict";t.r(a);var r=t(0),n=t.n(r),o=t(279),l=t(218),d=t(67);a.default=function(){return n.a.createElement(o.a,{style:{width:500}},n.a.createElement(o.a.Header,null,"Header"),n.a.createElement(o.a.Body,null,n.a.createElement("br",null),n.a.createElement(l.a,{onSubmit:function(e){console.log(e)}},n.a.createElement(l.a.Item,{label:"User name"},n.a.createElement(d.a,{name:"name",defaultValue:"user"})),n.a.createElement(l.a.Item,{label:"Email"},n.a.createElement(d.a,{name:"email",defaultValue:"test@example.com"})))),n.a.createElement(o.a.Footer,{align:"right"},n.a.createElement(o.a.Submit,null,"Submit")))}},1394:function(e,a){e.exports='/**\r\n * - Form\r\n *    -- Use Card.submit to trigger the submimt event of the form in the card.\r\n */\r\nimport React from \'react\'\r\nimport { Card, Form, Input } from \'megacosm\'\r\n\r\nexport default function() {\r\n  return (\r\n    <Card style={{ width: 500 }}>\r\n      <Card.Header>Header</Card.Header>\r\n\r\n      <Card.Body>\r\n        <br />\r\n        <Form\r\n          onSubmit={data => {\r\n            console.log(data)\r\n          }}\r\n        >\r\n          <Form.Item label="User name">\r\n            <Input name="name" defaultValue="user" />\r\n          </Form.Item>\r\n\r\n          <Form.Item label="Email">\r\n            <Input name="email" defaultValue="test@example.com" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Card.Body>\r\n\r\n      <Card.Footer align="right">\r\n        <Card.Submit>Submit</Card.Submit>\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n'},1395:function(e,a,t){"use strict";t.r(a);var r=t(0),n=t.n(r),o=t(279),l=t(290);a.default=function(){return n.a.createElement(o.a,{collapsible:!0},n.a.createElement(o.a.Header,null,"Header"),n.a.createElement(o.a.Body,null,n.a.createElement("div",{style:{height:100}},n.a.createElement(l.a,null))))}},1396:function(e,a){e.exports="/**\r\n * - Collapse\r\n *    -- Set collapsible can collapse the Card panel.\r\n */\r\nimport React from 'react'\r\nimport { Card, DatePicker } from 'megacosm'\r\n\r\nexport default function() {\r\n  return (\r\n    <Card collapsible>\r\n      <Card.Header>Header</Card.Header>\r\n\r\n      <Card.Body>\r\n        <div style={{ height: 100 }}>\r\n          <DatePicker />\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n"},1397:function(e,a,t){"use strict";t.r(a);var r=t(0),n=t.n(r),o=t(279);a.default=function(){return n.a.createElement(o.a.Accordion,{defaultActive:1},n.a.createElement(o.a,null,n.a.createElement(o.a.Header,null,"Header 1"),n.a.createElement(o.a.Body,null,"Body")),n.a.createElement(o.a,null,n.a.createElement(o.a.Header,null,"Header 2"),n.a.createElement(o.a.Body,null,"Body")),n.a.createElement(o.a,null,n.a.createElement(o.a.Header,null,"Header 3"),n.a.createElement(o.a.Body,null,"Body")))}},1398:function(e,a){e.exports="/**\r\n * - Accordion\r\n *    -- Put a group of Card in the Card.Accordion, only one panel can be expanded at the same time.\r\n */\r\nimport React from 'react'\r\nimport { Card } from 'megacosm'\r\n\r\nexport default function() {\r\n  return (\r\n    <Card.Accordion defaultActive={1}>\r\n      <Card>\r\n        <Card.Header>Header 1</Card.Header>\r\n        <Card.Body>Body</Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <Card.Header>Header 2</Card.Header>\r\n        <Card.Body>Body</Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <Card.Header>Header 3</Card.Header>\r\n        <Card.Body>Body</Card.Body>\r\n      </Card>\r\n    </Card.Accordion>\r\n  )\r\n}\r\n"},279:function(e,a,t){"use strict";var r=t(17),n=t(4),o=t(5),l=t(2),d=t(6),c=t(7),s=t(0),i=t.n(s),u=t(15),m=t.n(u),p=t(28),h=t(30),b=t(1),f=t(158),y=t(20),C=t(162),v=t(161),u=function(e){Object(d.a)(r,e);var t=Object(c.a)(r);function r(e){var a;return Object(n.a)(this,r),(a=t.call(this,e)).state={collapsed:e.defaultCollapsed,formStatus:""},a.bindElement=a.bindElement.bind(Object(l.a)(a)),a.handleSubmit=a.handleSubmit.bind(Object(l.a)(a)),a.handleCollapse=a.handleCollapse.bind(Object(l.a)(a)),a.setFormStatus=a.setFormStatus.bind(Object(l.a)(a)),a}return Object(o.a)(r,[{key:"getCollapsed",value:function(){var e=this.props,a=e.collapsible,e=e.collapsed;if(a)return void 0!==e?e:this.state.collapsed}},{key:"setFormStatus",value:function(e){e!==this.state.formStatus&&this.setState({formStatus:e})}},{key:"bindElement",value:function(e){this.element=e;var a=this.props.forwardedRef;a&&a(e)}},{key:"handleCollapse",value:function(){var e=!this.getCollapsed();this.props.onCollapse?this.props.onCollapse(e):this.setState({collapsed:e})}},{key:"handleSubmit",value:function(e){var a=this.element.querySelector("form");a?Object(h.dispatchEvent)(a,"submit",e):console.error(new Error("No form found."))}},{key:"render",value:function(){var e=this.props.collapsible,a=this.getCollapsed(),t=!0===this.props.shadow?"shadow":this.props.shadow,t=m()(Object(b.d)("_",t,e&&"collapsible",a&&"collapsed"),this.props.className),a={onCollapse:this.handleCollapse,collapsible:e,collapsed:a,formStatus:this.state.formStatus,onSubmit:this.handleSubmit,setFormStatus:this.setFormStatus};return i.a.createElement("div",{className:t,ref:this.bindElement,style:this.props.style},i.a.createElement(f.a,{value:a},this.props.children))}}]),r}(s.PureComponent);u.defaultProps=Object(r.a)(Object(r.a)({},p.a),{},{defaultCollapsed:!0,collapsible:!1});var p=Object(y.compose)(Object(v.a)(".".concat(Object(b.d)("header"))),C.a)(u),E=t(14),g=t(55),j=["onSubmit","loading","children","formStatus"],y=function(e){Object(d.a)(t,e);var a=Object(c.a)(t);function t(e){return Object(n.a)(this,t),(e=a.call(this,e)).handleClick=e.handleClick.bind(Object(l.a)(e)),e}return Object(o.a)(t,[{key:"handleClick",value:function(e){var a=this;e.persist(),setTimeout(function(){a.props.onSubmit(e.target)},50)}},{key:"render",value:function(){var e=this.props,a=(e.onSubmit,e.loading),t=e.children,r=e.formStatus,e=Object(E.a)(e,j);return i.a.createElement(g.a,Object.assign({type:"primary"},e,{disabled:e.disabled||"disabled"===r,loading:"pending"===r||a,onClick:this.handleClick}),t)}}]),t}(s.PureComponent),O=t(40),v=function(e){Object(d.a)(t,e);var a=Object(c.a)(t);function t(){return Object(n.a)(this,t),a.apply(this,arguments)}return Object(o.a)(t,[{key:"renderIndicator",value:function(){if(void 0!==this.props.collapsed){var e=Object(b.d)("indicator");return i.a.createElement("span",{className:e},O.a.AngleRight)}}},{key:"render",value:function(){var e=this.props,a=e.style,t=e.align,r=e.className,n=e.children,o=e.onCollapse,e=e.collapsed,r=m()(Object(b.d)("header",t),r);return i.a.createElement("div",{style:a,onClick:"boolean"==typeof e?o:void 0,className:r},this.renderIndicator(),n)}}]),t}(s.PureComponent),C=t(54),B=["className","collapsed","collapsible","onCollapse"],w=Object(C.a)(["collapse"],"fast"),u=function(e){Object(d.a)(t,e);var a=Object(c.a)(t);function t(){return Object(n.a)(this,t),a.apply(this,arguments)}return Object(o.a)(t,[{key:"render",value:function(){var e=this.props,a=e.className,t=e.collapsed,r=e.collapsible,n=e.onCollapse,e=Object(E.a)(e,B),a=m()(Object(b.d)("body"),a);if(!r)return i.a.createElement("div",Object.assign({},e,{className:a}));n="boolean"==typeof t?n:void 0;return i.a.createElement(w,{show:!t},i.a.createElement("div",Object.assign({},e,{className:a}),e.children,"bottom"===r&&i.a.createElement("div",{className:Object(b.d)("foldup"),onClick:n},i.a.createElement("span",null))))}}]),t}(s.PureComponent),S=["align","className"],C=function(e){Object(d.a)(t,e);var a=Object(c.a)(t);function t(){return Object(n.a)(this,t),a.apply(this,arguments)}return Object(o.a)(t,[{key:"render",value:function(){var e=this.props,a=e.align,t=e.className,e=Object(E.a)(e,S),t=m()(Object(b.d)("footer",a),t);return i.a.createElement("div",Object.assign({},e,{className:t}))}}]),t}(s.PureComponent),t=t(19),t=function(e){Object(d.a)(r,e);var t=Object(c.a)(r);function r(e){var a;return Object(n.a)(this,r),(a=t.call(this,e)).state={active:e.active||e.defaultActive},a}return Object(o.a)(r,[{key:"getActive",value:function(){return(void 0!==this.props.active?this.props:this.state).active}},{key:"handleActive",value:function(e){e===this.state.active&&(e=null),this.setState({active:e}),this.props.onChange&&this.props.onChange(e)}},{key:"render",value:function(){var r=this,n=this.getActive();return s.Children.toArray(this.props.children).map(function(e,a){var t=(t=a,(a=e)&&a.props&&void 0!==a.props.id?a.props.id:t),t={collapsed:n!==t,collapsible:!0,className:m()("object"==typeof e&&e.className,Object(b.d)("accordion")),onCollapse:r.handleActive.bind(r,t)};return Object(s.cloneElement)(e,t)})}}]),r}(t.b);t.defaultProps={defaultActive:0};p.Header=Object(f.b)(v,["collapsed","onCollapse"]),p.Body=Object(f.b)(u,["collapsed","collapsible","onCollapse"]),p.Footer=C,p.Submit=Object(f.b)(y,["onSubmit","formStatus"]),p.Accordion=t,p.Body.displayName="MegacosmCardBody",p.Header.displayName="MegacosmCardHeader",p.displayName="MegacosmCard";a.a=p}}]);