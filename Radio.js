(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[34],{286:function(e,t,n){"use strict";var r=n(20),a=n(46),o=n(57),d=n(491),l=n(4),i=n(5),u=n(2),c=n(26),s=n(21),m=n(6),f=n(7),p=n(0),b=n.n(p),p=n(15),h=n.n(p),p=n(19),g=n(22),y=n(10),v=n(1),k=n(157),w=n(16),n=function(e){Object(m.a)(n,e);var t=Object(f.a)(n);function n(e){return Object(l.a)(this,n),(e=t.call(this,e)).handleClick=e.handleClick.bind(Object(u.a)(e)),e.handleUpdate=e.forceUpdate.bind(Object(u.a)(e)),e.handleRawChange=e.handleRawChange.bind(Object(u.a)(e)),e}return Object(i.a)(n,[{key:"componentDidMount",value:function(){Object(c.a)(Object(s.a)(n.prototype),"componentDidMount",this).call(this),this.props.datum.subscribe(y.a,this.handleUpdate)}},{key:"componentWillUnmount",value:function(){Object(c.a)(Object(s.a)(n.prototype),"componentWillUnmount",this).call(this),this.props.datum.unsubscribe(y.a,this.handleUpdate)}},{key:"getContent",value:function(e,t){var n=this.props.renderItem;return"string"==typeof n?e[n]:"function"==typeof n?n(e,t):""}},{key:"handleClick",value:function(e,t,n){var r=this.props,a=r.data;r.datum.set(a[n])}},{key:"handleRawChange",value:function(e){this.props.datum.set(e)}},{key:"render",value:function(){var n=this,e=this.props,t=e.block,r=e.data,a=e.datum,o=e.keygen,l=e.children,i=e.button,u=e.size,e=Object(w.b)(),e=h()(Object(v.h)("group",t&&"block",i&&"button","outline"===i&&"outline",i&&u,e&&"rtl"),this.props.className);return void 0===r?b.a.createElement("div",{className:e},b.a.createElement(d.a,{value:{onRawChange:this.handleRawChange,checked:a.check.bind(a)}},l)):b.a.createElement("div",{className:e},r.map(function(e,t){return b.a.createElement(k.a,{checked:a.check(e),disabled:a.disabled(e),key:Object(g.b)(e,o,t),htmlValue:t,index:t,onChange:n.handleClick},n.getContent(e,t))}),l)}}]),n}(p.b);n.defaultProps={renderItem:function(e){return e}};p=n,n=Object(d.b)(k.a);n.Group=Object(r.compose)(a.a,o.a.hoc({limit:1,bindProps:["disabled","format","prediction"],pure:!1}))(p),n.displayName="MegacosmRadio",n.Group.displayName="MegacosmRadioGroup";t.a=n},491:function(e,t,n){"use strict";n.d(t,"a",function(){return o}),n.d(t,"b",function(){return l});var t=n(0),r=n.n(t),t=n(32),a=n.n(t)()(),o=a.Provider,l=function(n){return function(t){return r.a.createElement(a.Consumer,null,function(e){return r.a.createElement(n,Object.assign({},t,e))})}}},873:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(488),l=n(489),i=n(45),r=n(874),r=n.n(r),u=Object(i.a)(r.a),d=[{name:"1-base",title:Object(i.a)("Base \n Radio.Group generate a group of radios from an array."),component:n(875).default,rawText:n(876)},{name:"2-group",title:Object(i.a)(" \n A series of radios group by Radio.Group."),component:n(877).default,rawText:n(878)},{name:"3-format",title:Object(i.a)("Complex data \n Complex data can use format to process value."),component:n(879).default,rawText:n(880)},{name:"5-block",title:Object(i.a)("Vertical layout \n The default is horizontal layout and setting the block property can changed it to be vertical layout."),component:n(881).default,rawText:n(882)},{name:"6-button-1",title:Object(i.a)("Button \n set button to show button style"),component:n(883).default,rawText:n(884)},{name:"6-button-2",title:Object(i.a)(" \n set button with outline to show outline button style"),component:n(885).default,rawText:n(886)},{name:"6-button-3",title:Object(i.a)(" \n size to set button style size"),component:n(887).default,rawText:n(888)},{name:"7-disabled",title:Object(i.a)("Disabled \n Set disabled property is set to true, all the options is disabled."),component:n(889).default,rawText:n(890)},{name:"8-disabled",title:Object(i.a)(" \n When the disabled is a function, disbale the option that the function to return true."),component:n(891).default,rawText:n(892)},{name:"9-toggle",title:Object(i.a)("Cancel \n Use component list for toggle radio"),component:n(893).default,rawText:n(894)}];t.default=Object(o.a)(function(e){return a.a.createElement(l.b,Object.assign({},e,{codes:void 0,source:u,examples:d}))})},874:function(e,t){e.exports="# Radio\r\n\r\n<example />\r\n\r\n## API\r\n\r\nRadio cannot be used alone.\r\n\r\n### Radio\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| checked | boolean \\| 'indeterminate' | - | if not set, use (value === htmlValue). |\r\n| disabled | boolean | false | disable checkbox |\r\n| htmlValue | any | true | Specifies the result |\r\n\r\n### Radio.Group\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| defaultValue | any | | default value. |\r\n| data | any[] | required | the data items |\r\n| disabled | (data: any) => boolean \\| boolean  | false | When the value is true, disabled all checkboxes; When the value is function, disable the checkbox that this function returns true. |\r\n| format | (data: any) => any \\| string | d => d | Format value<br />Default value, return original data. <br />When it is a string, it will get the value from the original data as a key .The same as (d) => d\\[format\\]<br />When it is a function, the result returned by the function will be the value. |\r\n| keygen | ((data: any) => string) \\| string \\| true  | required | Key generator<br />When it is true, the data itself is used as the key equivalent to (d => d)<br />When it is a function, use its return value.<br />When it is a stringï¼Œues the value of the string.For example, 'id' is the same thing as (d) => d.id. |\r\n| name | string | none | The name of a Form that accesses data |\r\n| onChange | (value: any) => void | none | value is the datum.getValue() |\r\n| prediction | (value: any, data: any) => boolean | (val, d) => val===format(d) | By default, the result of the format function is used to compare whether it matches. In some cases (for example, whe an object that returns the original data is updated, an different option with the same value  is generated), the prediction function used to determine whether match. |\r\n| renderItem | (data: any) => ReactNode \\| string | required | When it is a string, return d\\[string]<br />When it is a function, return the result of the function. |\r\n| value | any | | In the Form, value is taken over by the Form and the value will be invalid. |\r\n"},875:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=["red","orange","yellow","green","cyan","blue","violet"];function i(e){var t={borderBottom:"solid 1px ".concat(e),paddingBottom:2};return a.a.createElement("span",{style:t},e)}t.default=function(){return a.a.createElement(o.a.Group,{keygen:!0,data:l,defaultValue:"blue",renderItem:i})}},876:function(e,t){e.exports="/**\r\n * - Base\r\n *    -- Radio.Group generate a group of radios from an array.\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nfunction renderItem(color) {\r\n  const style = { borderBottom: `solid 1px ${color}`, paddingBottom: 2 }\r\n  return <span style={style}>{color}</span>\r\n}\r\n\r\nexport default function() {\r\n  return <Radio.Group keygen data={data} defaultValue=\"blue\" renderItem={renderItem} />\r\n}\r\n"},877:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=["red","orange","yellow","green","cyan","blue","violet"];t.default=function(){return a.a.createElement(o.a.Group,{keygen:!0,defaultValue:"yellow"},l.map(function(e){return a.a.createElement(o.a,{key:e,htmlValue:e},e)}))}},878:function(e,t){e.exports="/**\r\n * -\r\n *    -- A series of radios group by Radio.Group.\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n  return (\r\n    <Radio.Group keygen defaultValue=\"yellow\">\r\n      {data.map(d => (\r\n        <Radio key={d} htmlValue={d}>\r\n          {d}\r\n        </Radio>\r\n      ))}\r\n    </Radio.Group>\r\n  )\r\n}\r\n"},879:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=[{id:1,color:"red"},{id:2,color:"orange"},{id:3,color:"yellow"},{id:4,color:"green"},{id:5,color:"cyan"},{id:6,color:"blue"},{id:7,color:"violet"}];t.default=function(){return a.a.createElement(o.a.Group,{keygen:"id",data:l,format:"color",defaultValue:"blue",renderItem:"color"})}},880:function(e,t){e.exports="/**\r\n * - Complex data\r\n *    -- Complex data can use format to process value.\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = [\r\n  { id: 1, color: 'red' },\r\n  { id: 2, color: 'orange' },\r\n  { id: 3, color: 'yellow' },\r\n  { id: 4, color: 'green' },\r\n  { id: 5, color: 'cyan' },\r\n  { id: 6, color: 'blue' },\r\n  { id: 7, color: 'violet' },\r\n]\r\n\r\nexport default function() {\r\n  return <Radio.Group keygen=\"id\" data={data} format=\"color\" defaultValue=\"blue\" renderItem=\"color\" />\r\n}\r\n"},881:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=[{id:1,color:"red"},{id:2,color:"orange"},{id:3,color:"yellow"},{id:4,color:"green"},{id:5,color:"cyan"},{id:6,color:"blue"},{id:7,color:"violet"}];t.default=function(){return a.a.createElement(o.a.Group,{keygen:"id",block:!0,data:l,datum:{format:"id"},defaultValue:3,renderItem:"color"})}},882:function(e,t){e.exports="/**\r\n * - Vertical layout\r\n *    -- The default is horizontal layout and setting the block property can changed it to be vertical layout.\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = [\r\n  { id: 1, color: 'red' },\r\n  { id: 2, color: 'orange' },\r\n  { id: 3, color: 'yellow' },\r\n  { id: 4, color: 'green' },\r\n  { id: 5, color: 'cyan' },\r\n  { id: 6, color: 'blue' },\r\n  { id: 7, color: 'violet' },\r\n]\r\n\r\nexport default function() {\r\n  return <Radio.Group keygen=\"id\" block data={data} datum={{ format: 'id' }} defaultValue={3} renderItem=\"color\" />\r\n}\r\n"},883:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=["red","orange","yellow"];t.default=function(){return a.a.createElement(o.a.Group,{button:!0,keygen:!0,data:l,defaultValue:"red"})}},884:function(e,t){e.exports="/**\r\n * - Button\r\n *    -- set button to show button style\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = ['red', 'orange', 'yellow']\r\n\r\nexport default function() {\r\n  return <Radio.Group button keygen data={data} defaultValue=\"red\" />\r\n}\r\n"},885:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=["red","orange","yellow"];t.default=function(){return a.a.createElement(o.a.Group,{button:"outline",keygen:!0,data:l,defaultValue:"red"})}},886:function(e,t){e.exports="/**\r\n * - \r\n *    -- set button with outline to show outline button style\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = ['red', 'orange', 'yellow']\r\n\r\nexport default function() {\r\n  return <Radio.Group button=\"outline\" keygen data={data} defaultValue=\"red\" />\r\n}\r\n"},887:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=["red","orange","yellow"];t.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a.Group,{size:"small",button:!0,keygen:!0,data:l,defaultValue:"red"}),a.a.createElement(o.a.Group,{keygen:!0,button:!0,data:l,defaultValue:"red"}),a.a.createElement(o.a.Group,{size:"large",button:!0,keygen:!0,data:l,defaultValue:"red"}))}},888:function(e,t){e.exports="/**\r\n * - \r\n *    -- size to set button style size\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = ['red', 'orange', 'yellow']\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Radio.Group size=\"small\" button keygen data={data} defaultValue=\"red\" />\r\n      <Radio.Group keygen button data={data} defaultValue=\"red\" />\r\n      <Radio.Group size=\"large\" button keygen data={data} defaultValue=\"red\" />\r\n    </div>\r\n  )\r\n}\r\n"},889:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=["red","orange","yellow","green","cyan","blue","violet"];t.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a.Group,{keygen:!0,disabled:!0,data:l,defaultValue:"blue",renderItem:function(e){return e}}))}},890:function(e,t){e.exports="/**\r\n * - Disabled\r\n *    -- Set disabled property is set to true, all the options is disabled.\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Radio.Group keygen disabled data={data} defaultValue=\"blue\" renderItem={d => d} />\r\n    </div>\r\n  )\r\n}\r\n"},891:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(286),l=["red","orange","yellow","green","cyan","blue","violet"];t.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a.Group,{keygen:!0,data:l,disabled:function(e){return"yellow"===e},defaultValue:"blue",renderItem:function(e){return e}}))}},892:function(e,t){e.exports="/**\r\n * - \r\n *    -- When the disabled is a function, disbale the option that the function to return true.\r\n */\r\nimport React from 'react'\r\nimport { Radio } from 'megacosm'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Radio.Group keygen data={data} disabled={d => d === 'yellow'} defaultValue=\"blue\" renderItem={d => d} />\r\n    </div>\r\n  )\r\n}\r\n"},893:function(e,t,n){"use strict";n.r(t);var r=n(27),a=n(0),o=n.n(a),l=n(286),i=["red","orange","yellow","green","cyan","blue","violet"];t.default=function(){var e=o.a.useState("red"),e=Object(r.a)(e,2),t=e[0],n=e[1];return o.a.createElement(l.a.Group,{keygen:!0,value:t,onChange:function(e){return n(e)}},i.map(function(e){return o.a.createElement("span",{key:e,onClick:function(){t===e&&setTimeout(function(){return n(void 0)})}},o.a.createElement(l.a,{htmlValue:e},e))}))}},894:function(e,t){e.exports='/**\r\n * - Cancel\r\n *    -- Use component list for toggle radio\r\n */\r\nimport React from "react";\r\nimport { Radio } from "megacosm";\r\n\r\nconst data = ["red", "orange", "yellow", "green", "cyan", "blue", "violet"];\r\n\r\nexport default function() {\r\n  const [current, setCurrent] = React.useState("red");\r\n  return (\r\n    <Radio.Group keygen value={current} onChange={(c) => setCurrent(c)}>\r\n      {data.map((d) => (\r\n        <span\r\n          key={d}\r\n          onClick={() => {\r\n            if (current === d) setTimeout(() => setCurrent(undefined));\r\n          }}\r\n        >\r\n          <Radio htmlValue={d}>{d}</Radio>\r\n        </span>\r\n      ))}\r\n    </Radio.Group>\r\n  );\r\n}\r\n'}}]);