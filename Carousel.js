(window.webpackJsonpMegacosmDoc=window.webpackJsonpMegacosmDoc||[]).push([[9],{1081:function(n,e,t){"use strict";t.r(e);var i=t(0),r=t.n(i),a=t(486),o=t(487),s=t(45),i=t(1082),i=t.n(i),c=Object(s.a)(i.a),l=[{name:"1-base",title:Object(s.a)("Base \n The carousel component provides three modes of animation transition. Change the option to view the result."),component:t(1083).default,rawText:t(1084)},{name:"2-custom-indicator",title:Object(s.a)("Custom Indicator \n Indicators can be customized when indicatorType is a function."),component:t(1085).default,rawText:t(1087)}];e.default=Object(a.a)(function(n){return r.a.createElement(o.b,Object.assign({},n,{codes:void 0,source:c,examples:l}))})},1082:function(n,e){n.exports="# Carousel\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| animation | string | 'slide' | animation effects, options: <br />slide - horizontal sliding<br />slide-y - vertical sliding<br />fade - fading |\r\n| className | string | none | extend className |\r\n| indicatorPosition | 'left' \\| 'center' \\| 'right'  | 'center' | the position of indicator |\r\n| indicatorType | (current: number, moveTo: () => void) => ReactNode \\| string | 'circle' | the style of indicator, string options: \\['circle', 'number', 'line'], using function for custom styles |\r\n| interval | number | 0 | the interval of animation, When it is not 0, play automatically |\r\n"},1083:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return m});var i=t(29),r=t(4),a=t(5),o=t(6),s=t(7),e=t(0),c=t.n(e),l=t(165),d=t(310),u={fontSize:40,color:"#fff",display:"flex",margin:"auto"},m=function(n){Object(o.a)(t,n);var e=Object(s.a)(t);function t(n){return Object(r.a)(this,t),(n=e.call(this,n)).state={interval:5e3,animation:"slide",indicatorType:"circle",indicatorPosition:"center"},n}return Object(a.a)(t,[{key:"propChange",value:function(n,e){this.setState(Object(i.a)({},n,e))}},{key:"render",value:function(){var n=this.state,e=n.interval,t=n.animation,i=n.indicatorPosition,n=n.indicatorType;return c.a.createElement("div",null,c.a.createElement("div",{style:{marginBottom:20}},"animation:"," ",c.a.createElement(l.a,{data:["slide","slide-y","fade"],keygen:!0,style:{width:100},value:t,size:"small",onChange:this.propChange.bind(this,"animation")}),"　indicatorPosition: ",c.a.createElement(l.a,{data:["left","center","right"],keygen:!0,style:{width:90},value:i,size:"small",onChange:this.propChange.bind(this,"indicatorPosition")}),"　indicatorType: ",c.a.createElement(l.a,{data:["circle","number","line"],keygen:!0,style:{width:90},value:n,size:"small",onChange:this.propChange.bind(this,"indicatorType")})),c.a.createElement(d.a,{style:{width:500,height:300},interval:e,animation:t,indicatorPosition:i,indicatorType:n},c.a.createElement("div",{style:{background:"#666",display:"flex"}},c.a.createElement("div",{style:u},"Page 1")),c.a.createElement("div",{style:{background:"#fa8c16",display:"flex"}},c.a.createElement("div",{style:u},"Page 2")),c.a.createElement("div",{style:{background:"#eb2f96",display:"flex"}},c.a.createElement("div",{style:u},"Page 3")),c.a.createElement("a",null,c.a.createElement("img",{alt:"",style:{width:"100%",height:"100%"},src:"../../../images/1_b.jpg"}))))}}]),t}(e.Component)},1084:function(n,e){n.exports="/**\r\n * - Base\r\n *    -- The carousel component provides three modes of animation transition. Change the option to view the result.\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Carousel, Select } from 'megacosm'\r\n\r\nconst containerStyle = {\r\n  fontSize: 40,\r\n  color: '#fff',\r\n  display: 'flex',\r\n  margin: 'auto',\r\n}\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      interval: 5000,\r\n      animation: 'slide',\r\n      indicatorType: 'circle',\r\n      indicatorPosition: 'center',\r\n    }\r\n  }\r\n\r\n  propChange(key, value) {\r\n    this.setState({ [key]: value })\r\n  }\r\n\r\n  render() {\r\n    const { interval, animation, indicatorPosition, indicatorType } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 20 }}>\r\n          animation:{' '}\r\n          <Select\r\n            data={['slide', 'slide-y', 'fade']}\r\n            keygen\r\n            style={{ width: 100 }}\r\n            value={animation}\r\n            size=\"small\"\r\n            onChange={this.propChange.bind(this, 'animation')}\r\n          />\r\n          {'　indicatorPosition: '}\r\n          <Select\r\n            data={['left', 'center', 'right']}\r\n            keygen\r\n            style={{ width: 90 }}\r\n            value={indicatorPosition}\r\n            size=\"small\"\r\n            onChange={this.propChange.bind(this, 'indicatorPosition')}\r\n          />\r\n          {'　indicatorType: '}\r\n          <Select\r\n            data={['circle', 'number', 'line']}\r\n            keygen\r\n            style={{ width: 90 }}\r\n            value={indicatorType}\r\n            size=\"small\"\r\n            onChange={this.propChange.bind(this, 'indicatorType')}\r\n          />\r\n        </div>\r\n\r\n        <Carousel\r\n          style={{ width: 500, height: 300 }}\r\n          interval={interval}\r\n          animation={animation}\r\n          indicatorPosition={indicatorPosition}\r\n          indicatorType={indicatorType}\r\n        >\r\n          <div style={{ background: '#666', display: 'flex' }}>\r\n            <div style={containerStyle}>Page 1</div>\r\n          </div>\r\n          <div style={{ background: '#fa8c16', display: 'flex' }}>\r\n            <div style={containerStyle}>Page 2</div>\r\n          </div>\r\n          <div style={{ background: '#eb2f96', display: 'flex' }}>\r\n            <div style={containerStyle}>Page 3</div>\r\n          </div>\r\n          <a>\r\n            <img alt=\"\" style={{ width: '100%', height: '100%' }} src=\"../../../images/1_b.jpg\" />\r\n          </a>\r\n        </Carousel>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},1085:function(n,e,t){"use strict";t.r(e);var i=t(0),o=t.n(i),r=t(310),i=t(15),s=t.n(i),a=(t(1086),{fontSize:40,color:"#fff",display:"flex",margin:"auto"}),c=["S","H","I","N","E"];function l(r,a){return o.a.createElement("div",{className:"indicator"},c.map(function(n,e){var t=r===e,i=s()("indicator-item",t&&"active"),t=t?{animation:"indicator-rise ".concat(5,"s linear")}:{};return o.a.createElement("div",{key:n,onClick:function(){return a(e)},className:i},o.a.createElement("span",null,n),o.a.createElement("div",{className:"indicator-progress"},o.a.createElement("div",{className:"fg",style:t}),o.a.createElement("div",{className:"bg"})))}))}e.default=function(){return o.a.createElement(r.a,{indicatorType:l,style:{width:500,height:300},interval:5e3},c.map(function(n){return o.a.createElement("div",{key:n,style:{background:"#2e97f1",display:"flex"}},o.a.createElement("div",{style:a},n))}))}},1086:function(n,e){},1087:function(n,e){n.exports="/**\r\n * - Custom Indicator\r\n *    -- Indicators can be customized when indicatorType is a function.\r\n */\r\nimport React from 'react'\r\nimport { Carousel } from 'megacosm'\r\nimport classnames from 'classnames'\r\nimport './style-2-custom-indicator.less'\r\n\r\nconst duration = 5000\r\nconst containerStyle = {\r\n  fontSize: 40,\r\n  color: '#fff',\r\n  display: 'flex',\r\n  margin: 'auto',\r\n}\r\n\r\nconst items = ['S', 'H', 'I', 'N', 'E']\r\n\r\nfunction indicatorSwitch(current, moveTo) {\r\n  return (\r\n    <div className=\"indicator\">\r\n      {items.map((item, index) => {\r\n        const isActive = current === index\r\n        const itemClassname = classnames('indicator-item', isActive && 'active')\r\n        const animationStyle = isActive ? { animation: `indicator-rise ${duration / 1000}s linear` } : {}\r\n        return (\r\n          <div key={item} onClick={() => moveTo(index)} className={itemClassname}>\r\n            <span>{item}</span>\r\n            <div className=\"indicator-progress\">\r\n              <div className=\"fg\" style={animationStyle} />\r\n              <div className=\"bg\" />\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Carousel indicatorType={indicatorSwitch} style={{ width: 500, height: 300 }} interval={duration}>\r\n      {items.map(item => (\r\n        <div key={item} style={{ background: '#2e97f1', display: 'flex' }}>\r\n          <div style={containerStyle}>{item}</div>\r\n        </div>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\n/* style-2-custom-indicator.css\r\n@keyframes indicator-rise {\r\n  from {\r\n    width: 0;\r\n  }\r\n  to {\r\n    width: 100%;\r\n  }\r\n}\r\ndiv.indicator {\r\n  text-align: center;\r\n  user-select: none;\r\n  float: left;\r\n}\r\ndiv.indicator-item {\r\n  margin-right: 10px;\r\n  float: left;\r\n  width: 36px;\r\n  height: 30px;\r\n  font-size: 20px;\r\n  color: #ffffff50;\r\n  cursor: pointer;\r\n}\r\ndiv.indicator-item.active {\r\n  color: #fff;\r\n}\r\ndiv.indicator .indicator-progress {\r\n  position: relative;\r\n}\r\ndiv.indicator .indicator-progress > div {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 2px;\r\n}\r\ndiv.indicator .indicator-progress .bg {\r\n  width: 100%;\r\n  background: #ffffff50;\r\n}\r\ndiv.indicator .indicator-progress .fg {\r\n  width: 0;\r\n  background: #ffffff;\r\n}\r\n*/\r\n"},310:function(n,e,t){"use strict";var i=t(17),r=t(4),a=t(5),o=t(2),s=t(26),c=t(21),l=t(6),d=t(7),u=t(0),m=t.n(u),p=t(15),h=t.n(p),f=t(19),p=t(28),v=t(75),y=t(1),g=function(n){Object(l.a)(t,n);var e=Object(d.a)(t);function t(){return Object(r.a)(this,t),e.apply(this,arguments)}return Object(a.a)(t,[{key:"render",value:function(){var n=this.props,e=n.children,t=n.current,n=n.pre,n=h()(Object(y.f)("item",t&&"item-current",n&&"item-pre"),this.props.className);return m.a.createElement("div",{className:n},e)}}]),t}(u.PureComponent),b=t(73),f=function(n){Object(l.a)(t,n);var e=Object(d.a)(t);function t(n){return Object(r.a)(this,t),(n=e.call(this,n)).state={current:0,direction:"stop",pre:0},n.handleMouseIn=n.handleMouseIn.bind(Object(o.a)(n)),n.handleMouseOut=n.handleMouseOut.bind(Object(o.a)(n)),n.moveTo=n.moveTo.bind(Object(o.a)(n)),n}return Object(a.a)(t,[{key:"componentDidMount",value:function(){Object(s.a)(Object(c.a)(t.prototype),"componentDidMount",this).call(this),this.setNext(1)}},{key:"componentDidUpdate",value:function(){1<this.count&&!this.$timeout&&this.setNext(this.state.current+1)}},{key:"setNext",value:function(n){var e=this,t=this.props.interval;0<t&&1<this.count&&(this.$timeout&&(clearTimeout(this.$timeout),this.$timeout=null),this.$timeout=setTimeout(function(){e.moveTo(n),e.$timeout=null},t))}},{key:"moveTo",value:function(n){var e,t=this.state.current;n!==t&&(e=t<n?"forward":"backward",n>=this.count&&(e="forward",n=0),this.setState({pre:t,current:n,direction:e}),this.setNext(n+1))}},{key:"handleMouseIn",value:function(){this.mouseInView=!0}},{key:"handleMouseOut",value:function(){this.mouseInView=!1,this.setNext(this.state.current+1)}},{key:"renderItems",value:function(){var n=this.state,t=n.current,i=n.pre;return u.Children.toArray(this.props.children).map(function(n,e){return m.a.createElement(g,{key:e,current:e===t,pre:e===i&&i!==t},n)})}},{key:"renderCustomIndicator",value:function(){var n=this.props,e=n.indicatorType,t=n.indicatorPosition,n=this.state.current,t=Object(y.f)("indicator","indicator-".concat(t));return m.a.createElement("div",{className:t},e(n,this.moveTo))}},{key:"renderIndicator",value:function(){var e=this,n=this.props,t=n.indicatorPosition,i=n.indicatorType;if("function"==typeof i)return this.renderCustomIndicator();var r=this.state.current,n=Object(y.f)("indicator","indicator-".concat(t),"indicator-".concat(i)),t=Object(v.range)(this.count).map(function(n){return m.a.createElement("a",{key:n,onClick:e.moveTo.bind(e,n),className:Object(y.f)(r===n&&"indicator-active")},"number"===i?n+1:"")});return m.a.createElement("div",{className:n},t)}},{key:"render",value:function(){this.count=u.Children.toArray(this.props.children).length;var n=this.props,e=n.animation,t=n.style,n=this.state.direction,n=h()(Object(y.f)("_",e,n),this.props.className);return m.a.createElement("div",Object.assign({className:n,style:t},Object(b.a)(this.props)),this.renderItems(),1<this.count&&this.renderIndicator())}}]),t}(f.b);f.defaultProps=Object(i.a)(Object(i.a)({},p.a),{},{animation:"slide",indicatorPosition:"center",indicatorType:"circle",interval:0}),f.displayName="MegacosmCarousel";e.a=f}}]);